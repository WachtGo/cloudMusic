{"version":3,"file":"js/408-legacy.de7f59e7.js","mappings":"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","sources":["webpack://music/./src/views/songDetails/songDetails.vue?201e","webpack://music/src/views/songDetails/songDetails.vue","webpack://music/./src/views/songDetails/songDetails.vue?6b77","webpack://music/./src/views/songDetails/songDetails.vue","webpack://music/./src/api/download.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-wrap\"},[_c('h3',[_vm._v(\"歌曲详情\")]),_c('div',{staticClass:\"descript\"}),_c('div',[_c('ul',[(_vm.$route.query.songId)?_c('div',{staticClass:\"playListDetailes\"},[_c('div',{staticClass:\"playListImg\"},[_c('img',{attrs:{\"src\":_vm.songDetails.al.picUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"detailsRight\"},[_c('h3',{staticStyle:{\"margin-left\":\"0px\",\"text-align\":\"left\",\"font-size\":\"20px\"}},[_vm._v(\" \"+_vm._s(_vm.songDetails.name)+\" \")]),_c('div',{staticStyle:{\"margin\":\"10px 0 10px 0\",\"height\":\"30px\",\"font-size\":\"14px\"}},[_c('span',{staticClass:\"playListNickName\"},[_vm._v(_vm._s(_vm.songDetails.ar[0].name))]),_c('span',[_c('br'),_vm._v(\" 时长  -  \"),_c('span',{staticStyle:{\"color\":\"antiquewhite\"}},[_vm._v(_vm._s(_vm.songDetails.dt))])]),_c('div',{staticClass:\"option\"},[_c('div',{staticClass:\"flexBetween\"},[_c('span',{staticClass:\"inline-block\",staticStyle:{\"margin-right\":\"5px\"},on:{\"click\":function($event){return _vm.listenMusic(_vm.songDetails.id, _vm.songDetails.fee)}}},[_c('i',{staticClass:\"el-icon-headset iconhover\"})]),(_vm.songDetails.fee == 0 || _vm.songDetails.fee == 8)?_c('span',{staticClass:\"inline-block\",staticStyle:{\"margin-right\":\"5px\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.playMusic(_vm.songDetails.id, _vm.songDetails.fee)}}},[_c('i',{staticClass:\"el-icon-folder-add iconhover\"})]):_vm._e(),(Boolean(_vm.songDetails.mv))?_c('span',{staticClass:\"inline-block\",on:{\"click\":function($event){return _vm.playMV(_vm.songDetails.mv, _vm.songDetails.name)}}},[_c('i',{staticClass:\"el-icon-video-camera iconhover\"}),_vm._v(\"  \")]):_vm._e(),(_vm.songDetails.fee == 0)?_c('span',{staticClass:\"inline-block\",staticStyle:{\"margin-right\":\"5px\"},on:{\"click\":function($event){return _vm.getDownloadUrl(_vm.songDetails.id, _vm.songDetails.name)}}},[_c('i',{staticClass:\"el-icon-download iconhover\"}),_vm._v(\" \")]):_vm._e(),(_vm.songDetails.fee != 0)?_c('span',[_vm._v(\"    \")]):_vm._e()])])]),_c('div',{staticStyle:{\"margin-top\":\"30px\",\"font-size\":\"14px\"}},[_c('span',[_vm._v(_vm._s(_vm.songDetails.alia[0]))])]),_c('br')])]):_vm._e(),_c('div',{staticStyle:{\"padding\":\"0px 50px\"}},[_c('h3',{staticStyle:{\"margin\":\"5px 0 10px 0\"}},[(_vm.commentCount)?_c('span',[_vm._v(\"评论(\"+_vm._s(_vm.commentCount)+\"条)\")]):_vm._e()]),_vm._l((_vm.songComment),function(item){return _c('div',{key:item.id,staticClass:\"hoverBackColor\"},[_c('img',{staticStyle:{\"width\":\"50px\",\"border-radius\":\"25px\"},attrs:{\"src\":item.user.avatarUrl}}),_c('span',{staticStyle:{\"display\":\"inline-block\",\"margin-left\":\"10px\",\"font-size\":\"15px\"}},[_vm._v(_vm._s(item.user.nickname)+\"  :  \")]),_c('span',{staticStyle:{\"margin-left\":\"20px\",\"width\":\"750px\"}},[_vm._v(\" \"+_vm._s(item.content)+\" \")]),_c('div',{staticStyle:{\"height\":\"30px\"}},[_c('span',{staticStyle:{\"float\":\"right\",\"width\":\"130px\"}},[_vm._v(\"  时间：\"+_vm._s(item.timeStr))]),_c('span',{staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(item.likedCount)+\" 赞   \")])])])}),_c('div',{staticClass:\"pagination\"},[(_vm.commentCount != 0)?_c('el-pagination',{attrs:{\"current-page\":_vm.currentPage,\"page-size\":7,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.commentCount,\"background\":true},on:{\"current-change\":_vm.songhandleCurrentChange,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}}):_vm._e()],1)],2),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}]},[_c('aplayer',{attrs:{\"autoplay\":true,\"fixed\":true,\"audio\":_vm.listen,\"liric-type\":1}})],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  height: 730px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n\r\n  ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.322);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          display: inline-block;\r\n\r\n          margin-left: 50px;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              transition: 0.2s;\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .songTns {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-bottom: 10px;\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(95, 158, 160, 0.322);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>歌曲详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <div class=\"playListDetailes\" v-if=\"$route.query.songId\">\r\n          <div class=\"playListImg\">\r\n            <img :src=\"songDetails.al.picUrl\" alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ songDetails.name }}\r\n            </h3>\r\n            <div style=\"margin: 10px 0 10px 0; height: 30px; font-size: 14px\">\r\n              <span class=\"playListNickName\">{{ songDetails.ar[0].name }}</span\r\n              ><span\r\n                ><br />\r\n                时长&nbsp;&nbsp;-&nbsp;&nbsp;<span\r\n                  style=\"color: antiquewhite\"\r\n                  >{{ songDetails.dt }}</span\r\n                ></span\r\n              >\r\n              <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"margin-right: 5px\"\r\n                    @click=\"listenMusic(songDetails.id, songDetails.fee)\"\r\n                    ><i class=\"el-icon-headset iconhover\"></i\r\n                  ></span>\r\n                  <!-- 添加到播放列表 -->\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"margin-right: 5px\"\r\n                    v-if=\"songDetails.fee == 0 || songDetails.fee == 8\"\r\n                    @click.stop=\"playMusic(songDetails.id, songDetails.fee)\"\r\n                    ><i class=\"el-icon-folder-add iconhover\"></i>\r\n                  </span>\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"\"\r\n                    v-if=\"Boolean(songDetails.mv)\"\r\n                    @click=\"playMV(songDetails.mv, songDetails.name)\"\r\n                    ><i class=\"el-icon-video-camera iconhover\"></i>&nbsp;\r\n                  </span>\r\n\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"margin-right: 5px\"\r\n                    v-if=\"songDetails.fee == 0\"\r\n                    @click=\"getDownloadUrl(songDetails.id, songDetails.name)\"\r\n                    ><i class=\"el-icon-download iconhover\"></i>&nbsp;</span\r\n                  ><span v-if=\"songDetails.fee != 0\">&nbsp;&nbsp;&nbsp; </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style=\"margin-top: 30px; font-size: 14px\">\r\n              <span>{{ songDetails.alia[0] }}</span>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n\r\n        <div style=\"padding: 0px 50px\">\r\n          <h3 style=\"margin: 5px 0 10px 0\">\r\n            <span v-if=\"commentCount\">评论({{ commentCount }}条)</span>\r\n          </h3>\r\n          <div\r\n            class=\"hoverBackColor\"\r\n            v-for=\"item in songComment\"\r\n            :key=\"item.id\"\r\n          >\r\n            <img\r\n              :src=\"item.user.avatarUrl\"\r\n              style=\"width: 50px; border-radius: 25px\"\r\n            />\r\n            <span\r\n              style=\"display: inline-block; margin-left: 10px; font-size: 15px\"\r\n              >{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span\r\n            >\r\n            <span style=\"margin-left: 20px; width: 750px\">\r\n              {{ item.content }}\r\n            </span>\r\n            <div style=\"height: 30px\">\r\n              <span style=\"float: right; width: 130px\"\r\n                >&nbsp;&nbsp;时间：{{ item.timeStr }}</span\r\n              ><span style=\"float: right\"\r\n                >{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pagination\">\r\n            <el-pagination\r\n              v-if=\"commentCount != 0\"\r\n              @current-change=\"songhandleCurrentChange\"\r\n              :current-page.sync=\"currentPage\"\r\n              :page-size=\"7\"\r\n              layout=\"prev, pager, next, jumper\"\r\n              :total=\"commentCount\"\r\n              :background=\"true\"\r\n            >\r\n            </el-pagination>\r\n          </div>\r\n        </div>\r\n        <div v-show=\"false\">\r\n          <aplayer\r\n            :autoplay=\"true\"\r\n            :fixed=\"true\"\r\n            :audio=\"listen\"\r\n            :liric-type=\"1\"\r\n          ></aplayer>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n  getSongComment,\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      listen: [],\r\n      //评论分页\r\n      currentPage: 1,\r\n      songUrlAdd: null,\r\n      songId: \"\", //接受的歌曲id\r\n      songDetails: {}, //歌曲详情\r\n      songComment: [],\r\n      commentCount: \"\",\r\n      //搜索歌曲总数\r\n      count: \"\",\r\n      //音乐地址\r\n      songurladd: null,\r\n      //歌词\r\n      songlrc: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    var that = this;\r\n    if (that.$route.query.recplaylist) {\r\n      that.getSongList();\r\n    } else if (that.$route.query.songId) {\r\n      that.getSongDetails();\r\n      that.getSongComment();\r\n    } else {\r\n      that.getMusicInfo();\r\n    }\r\n  },\r\n  methods: {\r\n    // 分页\r\n    songhandleCurrentChange(currentPage) {\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getSongComment();\r\n    },\r\n    //获取歌曲详情\r\n    getSongDetails() {\r\n      var that = this;\r\n      let params = {\r\n        ids: that.$route.query.songId,\r\n      };\r\n      getSongDetails(params).then((res) => {\r\n        that.songDetails = res.data.songs[0];\r\n        that.$set(that.songDetails, \"timer\", true);\r\n        let min = parseInt(that.songDetails.dt / 1000 / 60);\r\n        let sec = parseInt((that.songDetails.dt / 1000) % 60);\r\n        if (min < 10) {\r\n          min = \"0\" + min;\r\n        }\r\n        if (sec < 10) {\r\n          sec = \"0\" + sec;\r\n        }\r\n        that.songDetails.dt = min + \":\" + sec;\r\n        console.log(\"歌曲详情\", res.data.songs[0]);\r\n      });\r\n    },\r\n    //获取歌曲评论\r\n    getSongComment() {\r\n      var that = this;\r\n      let params = {\r\n        id: that.$route.query.songId,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      };\r\n      getSongComment(params).then((res) => {\r\n        this.songComment = res.data.comments;\r\n        that.commentCount = res.data.total;\r\n        console.log(\"歌曲评论：\", res.data);\r\n      });\r\n    },\r\n    //获取播放音乐链接\r\n    listenMusic(id, fee) {\r\n      var that = this;\r\n      if (that.songDetails.timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.songDetails.timer = false;\r\n            setTimeout(() => {\r\n              that.songDetails.timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            console.log(\"获取歌曲信息：\", res.data.songs);\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.songDetails.timer = false;\r\n              setTimeout(() => {\r\n                that.songDetails.timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //添加到播放列表\r\n    playMusic(id, fee) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.songDetails.timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.songDetails.timer = false;\r\n            setTimeout(() => {\r\n              that.songDetails.timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSong\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                // theme: that.randomColor(),\r\n              });\r\n              console.log(\r\n                that.$store.state.audio,\r\n                \"添加歌曲后的歌曲播放列表-----\"\r\n              );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.songDetails.timer = false;\r\n              setTimeout(() => {\r\n                that.songDetails.timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //获取歌曲下载地址\r\n    getDownloadUrl(songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    playMV(mvId, mvName) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        query: { mvId: mvId, mvName: mvName },\r\n      });\r\n    },\r\n    //根据主题更换播放器颜色\r\n    randomColor() {\r\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n    },\r\n  },\r\n};\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./songDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./songDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./songDetails.vue?vue&type=template&id=426c6cb4&scoped=true&\"\nimport script from \"./songDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./songDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./songDetails.vue?vue&type=style&index=0&id=426c6cb4&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"426c6cb4\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport axios from 'axios'\r\nexport const download = function (src, filename) {\r\n    if (!src) {\r\n        return\r\n    }\r\n    let fileName = filename || '' // 文件名\r\n    axios({\r\n        method: 'get',\r\n        url: src,\r\n        responseType: 'blob',\r\n        headers: { 'content-type': 'audio/mpeg' },\r\n    }).then((res) => {\r\n        let blobType = 'application/force-download' // 设置blob请求头\r\n        let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n        let downa = document.createElement('a') // 创建A标签\r\n        let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n        downa.href = href // 下载地址\r\n        downa.download = fileName // 下载文件名\r\n        document.body.appendChild(downa)\r\n        downa.click() // 模拟点击A标签\r\n        document.body.removeChild(downa) // 下载完成移除元素\r\n        window.URL.revokeObjectURL(href) // 释放blob对象\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\n// import axios from 'axios'\r\n// export const download = function (src, filename,id) {\r\n//     if (!src) {\r\n//         return\r\n//     }\r\n//     let fileName = filename || '' // 文件名\r\n//     axios({\r\n//         method: 'get',\r\n//         url: `https://autumnfish.cn/song/download/url?id=${id}`,\r\n//         responseType: 'blob',\r\n//         headers: { 'content-type': 'audio/mpeg' },\r\n//     }).then((res) => {\r\n//         let blobType = 'application/force-download' // 设置blob请求头\r\n//         let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n//         let downa = document.createElement('a') // 创建A标签\r\n//         let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n//         downa.href = href // 下载地址\r\n//         downa.download = fileName // 下载文件名\r\n//         document.body.appendChild(downa)\r\n//         downa.click() // 模拟点击A标签\r\n//         document.body.removeChild(downa) // 下载完成移除元素\r\n//         window.URL.revokeObjectURL(href) // 释放blob对象\r\n//     }).catch(function (error) {\r\n//         console.log(error)\r\n//     })\r\n// }"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","$route","query","attrs","songDetails","al","picUrl","staticStyle","_s","name","ar","dt","on","$event","listenMusic","id","fee","stopPropagation","playMusic","_e","Boolean","mv","playMV","getDownloadUrl","alia","commentCount","_l","item","key","user","avatarUrl","nickname","content","timeStr","likedCount","currentPage","songhandleCurrentChange","directives","rawName","value","expression","listen","staticRenderFns","data","songUrlAdd","songId","songComment","count","songurladd","songlrc","created","that","recplaylist","getSongList","getSongDetails","getSongComment","getMusicInfo","methods","ids","res","songs","$set","min","sec","console","log","limit","offset","total","timer","$message","message","type","playMusicUrl","then","url","setTimeout","getSongLyric","artist","cover","lrc","songName","download","mvId","mvName","$router","push","randomColor","component","src","filename","fileName","axios","method","responseType","headers","blob","Blob","downa","document","createElement","href","window","URL","createObjectURL","body","appendChild","click","removeChild","revokeObjectURL","catch","error"],"sourceRoot":""}