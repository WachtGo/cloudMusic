{"version":3,"file":"js/26-legacy.34258e7a.js","mappings":"qJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACA,EAAG,MAAM,CAACE,YAAY,WAAW,CAAGN,EAAIO,UAAUC,WAA0GR,EAAIS,KAAlGL,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIY,UAAU,iBAAiB,CAACZ,EAAIa,GAAG,QAAkBb,EAAIO,UAAoB,WAAEH,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,sBAAsB,CAACd,EAAIa,GAAG,QAAQb,EAAIS,KAAOT,EAAIO,UAAUQ,YAA4Gf,EAAIS,KAAnGL,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIY,UAAU,kBAAkB,CAACZ,EAAIa,GAAG,QAAkBb,EAAIO,UAAqB,YAAEH,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,sBAAsB,CAACd,EAAIa,GAAG,QAAQb,EAAIS,KAAOT,EAAIO,UAAUS,aAA8GhB,EAAIS,KAApGL,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIY,UAAU,mBAAmB,CAACZ,EAAIa,GAAG,QAAkBb,EAAIO,UAAsB,aAAEH,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,sBAAsB,CAACd,EAAIa,GAAG,QAAQb,EAAIS,KAAOT,EAAIO,UAAUU,eAAkHjB,EAAIS,KAAtGL,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIY,UAAU,qBAAqB,CAACZ,EAAIa,GAAG,QAAkBb,EAAIO,UAAwB,eAAEH,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,sBAAsB,CAACd,EAAIa,GAAG,QAAQb,EAAIS,KAAOT,EAAIO,UAAUW,YAA4GlB,EAAIS,KAAnGL,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIY,UAAU,kBAAkB,CAACZ,EAAIa,GAAG,QAAkBb,EAAIO,UAAqB,YAAEH,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,sBAAsB,CAACd,EAAIa,GAAG,QAAQb,EAAIS,KAAOT,EAAIO,UAAUY,SAAsGnB,EAAIS,KAAhGL,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIY,UAAU,eAAe,CAACZ,EAAIa,GAAG,QAAkBb,EAAIO,UAAkB,SAAEH,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,sBAAsB,CAACd,EAAIa,GAAG,QAAQb,EAAIS,SAASL,EAAG,MAAM,CAACE,YAAY,aAAaF,EAAG,MAAM,CAACA,EAAG,KAAK,CAAEJ,EAAIO,UAAoB,WAAEH,EAAG,MAAMJ,EAAIoB,GAAIpB,EAAa,WAAE,SAASqB,EAAKC,GAAO,OAAOlB,EAAG,KAAK,CAACmB,IAAIF,EAAKG,GAAGlB,YAAY,cAAc,CAACF,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,SAAS,CAACd,EAAIa,GAAGb,EAAIyB,GAAGH,EAAQ,GAAG,OAAOlB,EAAG,MAAM,CAACM,GAAG,CAAC,SAAW,SAASC,GAAQ,OAAOX,EAAI0B,cAAcL,EAAKG,OAAO,CAACpB,EAAG,OAAO,CAACE,YAAY,mBAAmB,CAACN,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKM,SAASvB,EAAG,OAAO,CAACE,YAAY,mBAAmB,CAACN,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKO,GAAG,GAAGD,SAASvB,EAAG,OAAO,CAACE,YAAY,mBAAmB,CAACN,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKQ,SAASzB,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAI8B,YAAYT,EAAKG,GAAIH,EAAKU,IAAKT,MAAU,CAAClB,EAAG,IAAI,CAACE,YAAY,gCAA6C,GAAZe,EAAKU,KAAwB,GAAZV,EAAKU,IAAU3B,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAiC,OAAzBA,EAAOqB,kBAAyBhC,EAAIiC,UAAUZ,EAAKG,GAAIH,EAAKU,IAAKT,MAAU,CAAClB,EAAG,IAAI,CAACE,YAAY,mCAAmCN,EAAIS,KAAMyB,QAAQb,EAAKc,IAAK/B,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAiC,OAAzBA,EAAOqB,kBAAyBhC,EAAIoC,OAAOf,EAAKc,GAAId,EAAKM,SAAS,CAACvB,EAAG,IAAI,CAACE,YAAY,qCAAqCN,EAAIS,KAAkB,GAAZY,EAAKU,IAAU3B,EAAG,OAAO,CAACM,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIqC,eAAehB,EAAKG,GAAIH,EAAKM,SAAS,CAACvB,EAAG,IAAI,CAACE,YAAY,iCAAiCN,EAAIS,YAAW,GAAGT,EAAIS,KAAMT,EAAIO,UAAqB,YAAEH,EAAG,MAAM,CAACE,YAAY,kBAAkBN,EAAIoB,GAAIpB,EAAa,WAAE,SAASqB,EAAKC,GAAO,OAAOlB,EAAG,KAAK,CAACmB,IAAID,EAAMhB,YAAY,SAASI,GAAG,CAAC,MAAQ,SAASC,GAAiC,OAAzBA,EAAOqB,kBAAyBhC,EAAIsC,cAAcjB,EAAKG,OAAO,CAACpB,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACmC,MAAM,CAAC,IAAMlB,EAAKmB,WAAW,IAAM,QAAQpC,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,OAAO,CAACE,YAAY,aAAa,CAACN,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKM,MAAM,KAAMN,EAAKoB,MAAM,GAAIrC,EAAG,OAAO,CAACE,YAAY,cAAc,CAACN,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKoB,MAAM,OAAOzC,EAAIS,SAASL,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,YAAY,CAACN,EAAIa,GAAG,QAAQT,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKqB,OAAOf,WAAWvB,EAAG,OAAO,CAACE,YAAY,eAAeQ,YAAY,CAAC,QAAU,eAAe,MAAQ,UAAUV,EAAG,MAAM,CAACE,YAAY,WAAWQ,YAAY,CAAC,MAAQ,UAAU,CAACd,EAAIa,GAAG,QAAQT,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKsB,oBAAmB,GAAG3C,EAAIS,KAAMT,EAAIO,UAAsB,aAAEH,EAAG,MAAM,CAACE,YAAY,mBAAmBN,EAAIoB,GAAIpB,EAAc,YAAE,SAASqB,EAAKC,GAAO,OAAOlB,EAAG,KAAK,CAACmB,IAAID,EAAMhB,YAAY,SAASI,GAAG,CAAC,MAAQ,SAASC,GAAiC,OAAzBA,EAAOqB,kBAAyBhC,EAAI4C,eAAevB,EAAKG,OAAO,CAACpB,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACmC,MAAM,CAAC,IAAMlB,EAAKwB,UAAU,IAAM,QAAQzC,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACN,EAAIa,GAAG,QAAQT,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKM,WAAWvB,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,YAAY,CAACN,EAAIa,GAAG,QAAQT,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKyB,gBAAgB1C,EAAG,MAAM,CAACE,YAAY,YAAY,CAACN,EAAIa,GAAG,QAAQT,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAK0B,sBAAqB,GAAG/C,EAAIS,KAAMT,EAAIO,UAAqB,YAAEH,EAAG,OAAOJ,EAAIS,KAAMT,EAAIO,UAAwB,eAAEH,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,KAAK,CAACE,YAAY,gBAAgBN,EAAIoB,GAAIpB,EAAiB,eAAE,SAASqB,EAAKC,GAAO,OAAOlB,EAAG,KAAK,CAACmB,IAAID,EAAMhB,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,MAAM,CAACmC,MAAM,CAAC,IAAMlB,EAAK2B,YAAY,IAAM,GAAG,MAAQ,IAAItC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIiD,WAAW5B,EAAKG,QAAQpB,EAAG,OAAO,CAACE,YAAY,aAAa,CAACF,EAAG,IAAI,CAACE,YAAY,qBAAqBQ,YAAY,CAAC,eAAe,SAASd,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAK6B,gBAAgB9C,EAAG,IAAI,CAACE,YAAY,aAAaI,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIiD,WAAW5B,EAAKG,OAAO,CAACpB,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKM,MAAM,cAAa,OAAO3B,EAAIS,KAAMT,EAAIO,UAAqB,YAAEH,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACE,YAAY,iBAAiBN,EAAIoB,GAAIpB,EAAa,WAAE,SAASqB,EAAKC,GAAO,OAAOlB,EAAG,KAAK,CAACmB,IAAID,EAAMhB,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,WAAWQ,YAAY,CAAC,SAAW,WAAW,MAAQ,QAAQ,OAAS,QAAQ,gBAAgB,QAAQyB,MAAM,CAAC,IAAMlB,EAAK8B,SAAS,IAAM,GAAG,MAAQ,IAAIzC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIoD,QAAQ/B,EAAKgC,IAAKhC,EAAKiC,UAAUlD,EAAG,OAAO,CAACE,YAAY,iBAAiB,CAACF,EAAG,IAAI,CAACE,YAAY,qBAAqBQ,YAAY,CAAC,eAAe,SAASd,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKkC,aAAanD,EAAG,OAAO,CAACE,YAAY,gBAAgBQ,YAAY,CAAC,OAAS,MAAM,CAACd,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKmC,iBAAiBpD,EAAG,IAAI,CAACE,YAAY,aAAaQ,YAAY,CAAC,YAAY,QAAQJ,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIoD,QAAQ/B,EAAKgC,IAAKhC,EAAKiC,SAAS,CAAClD,EAAG,OAAO,CAACU,YAAY,CAAC,QAAU,eAAe,MAAQ,OAAO,SAAW,SAAS,cAAc,SAAS,gBAAgB,aAAa,CAAGO,EAAKiC,KAA+DtD,EAAIS,KAA7DL,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,QAAQ,CAACd,EAAIa,GAAG,SAAkBb,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKoC,UAAUrD,EAAG,MAAMA,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,uBAAuB,CAAEO,EAAc,UAAEjB,EAAG,OAAO,CAACJ,EAAIa,GAAG,SAASb,EAAIS,KAAKL,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKqC,QAAQ,GAAGC,sBAAqB,OAAO3D,EAAIS,KAAMT,EAAIO,UAAkB,SAAEH,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACE,YAAY,iBAAiBN,EAAIoB,GAAIpB,EAAU,QAAE,SAASqB,EAAKC,GAAO,OAAOlB,EAAG,KAAK,CAACmB,IAAID,EAAMhB,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,WAAWQ,YAAY,CAAC,SAAW,WAAW,MAAQ,QAAQ,OAAS,QAAQ,gBAAgB,QAAQyB,MAAM,CAAC,IAAMlB,EAAKuC,MAAM,IAAM,GAAG,MAAQ,IAAIlD,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIoD,QAAQ/B,EAAKG,GAAIH,EAAKwC,UAAUzD,EAAG,OAAO,CAACE,YAAY,iBAAiB,CAACF,EAAG,IAAI,CAACE,YAAY,qBAAqBQ,YAAY,CAAC,eAAe,SAASd,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAK6B,cAAc9C,EAAG,OAAO,CAACE,YAAY,gBAAgBQ,YAAY,CAAC,OAAS,MAAM,CAACd,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKyC,eAAe1D,EAAG,IAAI,CAACE,YAAY,aAAaQ,YAAY,CAAC,YAAY,QAAQJ,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOX,EAAIoD,QAAQ/B,EAAKG,GAAIH,EAAKwC,SAAS,CAACzD,EAAG,OAAO,CAACU,YAAY,CAAC,QAAU,eAAe,MAAQ,OAAO,SAAW,SAAS,cAAc,SAAS,gBAAgB,aAAa,CAAGO,EAAKiC,KAA+DtD,EAAIS,KAA7DL,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,QAAQ,CAACd,EAAIa,GAAG,SAAkBb,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAKM,SAASvB,EAAG,MAAMA,EAAG,OAAO,CAACU,YAAY,CAAC,MAAQ,uBAAuB,CAACV,EAAG,OAAO,CAACJ,EAAIa,GAAG,SAAST,EAAG,OAAO,CAACJ,EAAIa,GAAGb,EAAIyB,GAAGJ,EAAK0C,wBAAuB,OAAO/D,EAAIS,SAASL,EAAG,MAAM,CAACU,YAAY,CAAC,aAAa,SAAS,aAAa,OAAO,aAAa,eAAe,CAAe,GAAbd,EAAIgE,MAAY5D,EAAG,gBAAgB,CAACmC,MAAM,CAAC,eAAevC,EAAIiE,YAAY,YAAY,GAAG,OAAS,4BAA4B,MAAQjE,EAAIgE,MAAM,YAAa,GAAMtD,GAAG,CAAC,iBAAiBV,EAAIkE,oBAAoB,qBAAqB,SAASvD,GAAQX,EAAIiE,YAAYtD,GAAQ,sBAAsB,SAASA,GAAQX,EAAIiE,YAAYtD,MAAWX,EAAIS,MAAM,GAAGL,EAAG,MAAM,CAAC+D,WAAW,CAAC,CAACxC,KAAK,OAAOyC,QAAQ,SAASC,OAAM,EAAQC,WAAW,WAAW,CAAClE,EAAG,UAAU,CAACmC,MAAM,CAAC,SAAW,GAAG,OAAQ,EAAK,MAAQvC,EAAIuE,OAAO,aAAa,MAAM,MAC96QC,EAAkB,G,wEC00BtB,GACEC,KADF,WAEI,MAAO,CAELF,OAAQ,GAERhE,UAAW,GAEXmE,UAAW,GAEXC,cAAe,GAEfC,UAAW,GAEXC,UAAW,GAEXC,WAAY,GAEZC,OAAQ,GAERC,YAAa,GAEbC,WAAY,QAEZjB,MAAO,GAEPkB,WAAY,KAEZC,QAAS,GAGTlB,YAAa,IAGjBmB,QAlCF,WAmCIC,QAAQC,IAAIrF,MACZ,IAAIsF,EAAOtF,KACXsF,EAAKhF,UAAYgF,EAAKC,OAAOC,MAAMlF,UACnCgF,EAAKG,UAEPC,QAAS,CAEP/E,UAFJ,SAEAgF,GACM,IAAIL,EAAOtF,KACXsF,EAAKC,OAAOK,OAAO,YAAaD,GAChCL,EAAKO,WAAU,WACbP,EAAKG,aAITxB,oBAAqB,SAAzBA,GAEMjE,KAAKgE,YAAcA,EACnB,IAAIsB,EAAOtF,KACPsF,EAAKQ,OAAOC,MAAMC,YACpBV,EAAKW,YAAYjC,GACzB,uBACQsB,EAAKY,kBACb,2BACQZ,EAAKa,eACb,wBACQb,EAAKc,eACb,qBACQd,EAAKe,aACb,0BAEA,0BADQf,EAAKgB,iBAKTb,OA9BJ,WA+BM,IAAIH,EAAOtF,KACPsF,EAAKQ,OAAOC,MAAMC,YACpBV,EAAKiB,qBACb,uBACQjB,EAAKY,kBACb,2BACQZ,EAAKa,eACb,wBACQb,EAAKc,eACb,qBACQd,EAAKe,YACb,yBACQf,EAAKgB,gBACb,yBACQhB,EAAKkB,gBAKT/E,cAlDJ,SAkDAgF,GACMzG,KAAK0G,QAAQC,KAAK,CAChBjF,KAAM,cACNqE,MAAO,CACLa,OAAQH,MAKdpE,cA3DJ,SA2DAd,GACMvB,KAAK0G,QAAQC,KAAK,CAChBjF,KAAM,cACNqE,MAAO,CACLxE,GAAIA,MAKVoB,eApEJ,SAoEApB,GACUA,GACFvB,KAAK0G,QAAQC,KAAK,CAChBjF,KAAM,eACNqE,MAAO,CACLxE,GAAIA,MAMZyB,WA/EJ,SA+EA6D,GAEM,IAAIvB,EAAOtF,KACXsF,EAAKoB,QAAQC,KAAK,CAChBjF,KAAM,kBACNqE,MAAO,CAAfrB,eAAAA,EAAAmC,WAAAA,MAIIN,mBAxFJ,WA0FM,IAAIjB,EAAOtF,KACjB,GACQuB,GAAI+D,EAAKQ,OAAOC,MAAMc,aAExBZ,EAAAA,EAAAA,IAAYa,GAAQC,MAAK,SAAdd,GAETb,QAAQC,IAAI,iBAAkB2B,EAAIxC,KAAKyC,UACvC3B,EAAK4B,SAAWF,EAAIxC,KAAKyC,SACzB3B,EAAKX,UAAYW,EAAK4B,SAASC,OAC/B7B,EAAK8B,eAAe9B,EAAK4B,SAAUtF,QAIvCwF,eAvGJ,SAuGAC,EAAAzF,GACM,IAAK,IAAX,oBACQ,IAAR,2BACA,2BACY0F,EAAM,KACRA,EAAM,IAAMA,GAEVC,EAAM,KACRA,EAAM,IAAMA,GAEdF,EAAIG,GAAG5F,GAAM0F,EAAM,IAAMC,IAG7BpF,OApHJ,SAoHAsF,EAAAC,GAEM1H,KAAK0G,QAAQC,KAAK,CAChBjF,KAAM,SACNqE,MAAO,CAAf0B,KAAAA,EAAAC,OAAAA,MAKI7F,YA7HJ,SA6HAN,EAAAO,EAAAT,GAEM,IAAIiE,EAAOtF,KACPsF,EAAKX,UAAUtD,GAAOsG,QACb,GAAP7F,GACFwD,EAAKsC,SAAS,CACZC,QAAS,kBACTxE,KAAM,aAGVyE,EAAAA,EAAAA,IAAa,CACXvG,GAAIA,IACdwF,MAAA,YAEU,IAAIC,EAAIxC,KAAKA,KAAK,GAAGuD,IAWnB,OARAzC,EAAKsC,SAAS,CACZC,QAAS,cACTxE,KAAM,UAERiC,EAAKX,UAAUtD,GAAOsG,OAAQ,OAC9BK,YAAW,WACT1C,EAAKX,UAAUtD,GAAOsG,OAAQ,IAC5C,KATYrC,EAAKL,WAAa+B,EAAIxC,KAAKA,KAAK,GAAGuD,QAcvCE,EAAAA,EAAAA,IAAAA,CACE,GAAV1G,IACAwF,MAAA,YACU,EAAVzB,QAAAA,EAAAA,KAAAA,IAAAA,MACU,QAAVF,IAAAA,aAAAA,EAAAA,aAGQ8C,EAAAA,EAAAA,IAAAA,CACE,IAAVzB,IACAM,MAAA,YACA,qBACY,EAAZzB,OAAAA,GACY,EAAZA,OAAAA,KAAAA,CACc,KAAd5D,EAAAA,KAAAA,MAAAA,GAAAA,KACc,OAAde,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,GAAAA,KACc,IAAdsF,EAAAA,WACc,MAAdpE,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,OACc,IAAdwE,EAAAA,UAEY,QAAZ/C,IAAAA,EAAAA,QACY,EAAZE,WAAAA,KACY,EAAZA,QAAAA,SAMItD,UArLJ,SAqLAT,EAAAO,EAAAT,GAEM,IAAIiE,EAAOtF,KACPsF,EAAKX,UAAUtD,GAAOsG,QACb,GAAP7F,GACFwD,EAAKsC,SAAS,CACZC,QAAS,kBACTxE,KAAM,aAGVyE,EAAAA,EAAAA,IAAa,CACXvG,GAAIA,IACdwF,MAAA,YAEU,GADA3B,QAAQC,IAAI,SAAU2B,EAAIxC,KAAKA,KAAK,GAAGuD,MACnCf,EAAIxC,KAAKA,KAAK,GAAGuD,IAWnB,OARAzC,EAAKsC,SAAS,CACZC,QAAS,cACTxE,KAAM,UAERiC,EAAKX,UAAUtD,GAAOsG,OAAQ,OAC9BK,YAAW,WACT1C,EAAKX,UAAUtD,GAAOsG,OAAQ,IAC5C,KATYrC,EAAKL,WAAa+B,EAAIxC,KAAKA,KAAK,GAAGuD,QAcvCE,EAAAA,EAAAA,IAAAA,CACE,GAAV1G,IACAwF,MAAA,YACU,EAAVzB,QAAAA,EAAAA,KAAAA,IAAAA,UAGQ4C,EAAAA,EAAAA,IAAAA,CACE,IAAVzB,IACAM,MAAA,YACU,QAAV3B,IAAAA,iBAAAA,EAAAA,KAAAA,MAAAA,IACA,qBACY,EAAZE,OAAAA,OAAAA,UAAAA,CACc,KAAd5D,EAAAA,KAAAA,MAAAA,GAAAA,KACc,OAAde,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,GAAAA,KACc,IAAdsF,EAAAA,WACc,MAAdpE,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,OACc,IAAdwE,EAAAA,QACc,GAAd5G,IAOY,EAAZ+D,WAAAA,KACY,EAAZA,QAAAA,GACY,EAAZA,UAAAA,GAAAA,OAAAA,EACY,YAAZ0C,WACc,EAAd1C,UAAAA,GAAAA,OAAAA,IACA,WAOIY,gBAtPJ,WAuPM,IAAIZ,EAAOtF,KACPsF,EAAKQ,OAAOC,MAAMqC,QACpBhD,QAAQC,IAAI,kBAAmBC,EAAKQ,QAGtC,IAAN,GACQuC,SAAU/C,EAAKQ,OAAOC,MAAMsC,SAC5BC,MAAO,GACPC,OAAiC,IAAxBjD,EAAKtB,YAAc,GAC5BX,KAAM,IAERmF,EAAAA,EAAAA,IAAa1B,GAAQC,MAAK,SAAdyB,GACV,IAAR,OACQlD,EAAKX,UAAYqC,EAAIxC,KAAKiE,OAAOC,MACjCpD,EAAKvB,MAAQiD,EAAIxC,KAAKiE,OAAOE,UAC7BrD,EAAK8B,eAAe9B,EAAKX,UAAW/C,GACpCwD,QAAQC,IAAI,QAAS2B,EAAIxC,KAAKiE,QALtC,gBAOAnD,EAAAA,WAPA,IAOA,0CACAA,EAAAA,KAAAA,EAAAA,SAAAA,IARA,mCAaIkB,aA/QJ,WAgRM,IAAIlB,EAAOtF,KAEjB,GACQqI,SAAU/C,EAAKQ,OAAOC,MAAMsC,SAC5BC,MAAO,GACPC,OAAiC,IAAxBjD,EAAKtB,YAAc,GAC5BX,KAAM,KAERmF,EAAAA,EAAAA,IAAa1B,GAAQC,MAAK,SAAdyB,GACVlD,EAAKV,UAAYoC,EAAIxC,KAAKiE,OAAOG,OACjCtD,EAAKvB,MAAQiD,EAAIxC,KAAKiE,OAAOI,WAC7BzD,QAAQC,IAAI,QAAS2B,EAAIxC,KAAKiE,YAIlCnC,cA/RJ,WAgSM,IAAIhB,EAAOtF,KACjB,GACQqI,SAAU/C,EAAKQ,OAAOC,MAAMsC,SAC5BC,MAAO,GACPC,OAAiC,IAAxBjD,EAAKtB,YAAc,GAC5BX,KAAM,MAERmF,EAAAA,EAAAA,IAAa1B,GAAQC,MAAK,SAAdyB,GACVpD,QAAQC,IAAI,aAAc2B,EAAIxC,KAAKiE,QACnCnD,EAAKT,WAAamC,EAAIxC,KAAKiE,OAAOK,QAClCxD,EAAKvB,MAAQiD,EAAIxC,KAAKiE,OAAOM,gBAIjC5C,aA9SJ,WA+SM,IAAIb,EAAOtF,KACjB,GACQqI,SAAU/C,EAAKQ,OAAOC,MAAMsC,SAC5BC,MAAO,GACPC,OAAiC,IAAxBjD,EAAKtB,YAAc,GAC5BX,KAAM,MAERmF,EAAAA,EAAAA,IAAa1B,GAAQC,MAAK,SAAdyB,GACVpD,QAAQC,IAAI,aAAc2B,EAAIxC,KAAKiE,QACnCnD,EAAKZ,cAAgBsC,EAAIxC,KAAKiE,OAAOO,UACrC1D,EAAKvB,MAAQiD,EAAIxC,KAAKiE,OAAOQ,cAC7B,IAAK,IAAb,iCAEAC,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,GACAA,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,EAEY5D,EAAKZ,cAAc8C,GAAGvE,UAClCiG,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OACA,EACAA,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,GACA,IACA,+CACY5D,EAAKZ,cAAc8C,GAAGvE,UAClCiG,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACAA,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACA,+CACY5D,EAAKZ,cAAc8C,GAAGvE,UAClCiG,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACAA,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACA,gDACY5D,EAAKZ,cAAc8C,GAAGvE,UAClCiG,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OACA,EACAA,OAAAA,EAAAA,cAAAA,GAAAA,WAAAA,OAAAA,GACA,SAMI9C,aA3VJ,WA4VM,IAAId,EAAOtF,KACjB,GACQqI,SAAU/C,EAAKQ,OAAOC,MAAMsC,SAC5BC,MAAO,GACPC,OAAiC,IAAxBjD,EAAKtB,YAAc,GAC5BX,KAAM,OAERmF,EAAAA,EAAAA,IAAa1B,GAAQC,MAAK,SAAdyB,GACV,IAAR,eACQpD,QAAQC,IAAI,aAAc2B,EAAIxC,KAAKiE,QACnCnD,EAAKb,UAAYuC,EAAIxC,KAAKiE,OAAOU,OACjC/D,QAAQC,IAAI,QAASC,EAAKb,WAC1Ba,EAAKvB,MAAQiD,EAAIxC,KAAKiE,OAAOW,WAC7B9D,EAAK8B,eAAe9B,EAAKb,UAAW7C,GAEpC,IAAK,IAAb,6BAEAsH,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,GACAA,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,EAEY5D,EAAKb,UAAU+C,GAAGlE,SAC9B4F,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OACA,EACAA,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,GACA,IACA,0CACY5D,EAAKb,UAAU+C,GAAGlE,SAC9B4F,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,EAAAA,GACA,IACAA,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,EAAAA,GACA,IACA,0CACY5D,EAAKb,UAAU+C,GAAGlE,SAC9B4F,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,EAAAA,GACA,IACAA,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,EAAAA,GACA,IACA,2CACY5D,EAAKb,UAAU+C,GAAGlE,SAC9B4F,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OACA,EACAA,OAAAA,EAAAA,UAAAA,GAAAA,UAAAA,OAAAA,GACA,SAMI7C,UA5YJ,WA6YM,IAAIf,EAAOtF,KACjB,GACQqI,SAAU/C,EAAKQ,OAAOC,MAAMsC,SAC5BC,MAAO,GACPC,OAAiC,IAAxBjD,EAAKtB,YAAc,GAC5BX,KAAM,OAERmF,EAAAA,EAAAA,IAAa1B,GAAQC,MAAK,SAAdyB,GACV,IAAR,aACQpD,QAAQC,IAAI,aAAc2B,EAAIxC,KAAKiE,QACnCnD,EAAKR,OAASkC,EAAIxC,KAAKiE,OAAOY,IAC9BjE,QAAQC,IAAI,QAASC,EAAKR,QAC1BQ,EAAKvB,MAAQiD,EAAIxC,KAAKiE,OAAOa,QAC7BhE,EAAK8B,eAAe9B,EAAKR,OAAQlD,GAEjC,IAAK,IAAb,0BAEAsH,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,GACAA,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,EAEY5D,EAAKR,OAAO0C,GAAGvE,UAC3BiG,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OACA,EACAA,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,GACA,IACA,wCACY5D,EAAKR,OAAO0C,GAAGvE,UAC3BiG,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACAA,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACA,wCACY5D,EAAKR,OAAO0C,GAAGvE,UAC3BiG,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACAA,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,EAAAA,GACA,IACA,yCACY5D,EAAKR,OAAO0C,GAAGvE,UAC3BiG,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OACA,EACAA,OAAAA,EAAAA,OAAAA,GAAAA,WAAAA,OAAAA,GACA,SAOI9G,eA9bJ,SA8bAwE,EAAA2C,GACM,IAAIjE,EAAOtF,KACjB,GACQuB,GAAIqF,IAENxE,EAAAA,EAAAA,IAAAA,GAAAA,MAAAA,SAAAA,GACEgD,QAAQC,IAAI,UAAW2B,EAAIxC,KAAKA,KAAKuD,MACrCyB,EAAAA,EAAAA,GAASxC,EAAIxC,KAAKA,KAAKuD,IAAKwB,GAC5BjE,EAAKsC,SAAS,CACZvE,KAAM,UACNwE,QAAS,cAIf1E,QA5cJ,SA4cAC,EAAAC,GACmB,IAATA,EACFrD,KAAK0G,QAAQC,KAAK,CAChBjF,KAAM,SACNqE,MAAO,CACL0B,KAAMrE,KAIVpD,KAAK0G,QAAQC,KAAK,CAChBjF,KAAM,YACNqE,MAAO,CACL3C,IAAKA,MAKbqG,YA7dJ,WA8dM,MAAO,IAAb,oDCj1CkR,I,UCQ9QC,GAAY,OACd,EACA5J,EACAyE,GACA,EACA,KACA,WACA,MAIF,EAAemF,EAAiB,S,mHCjBnBF,EAAW,SAAUG,EAAKC,GACnC,GAAKD,EAAL,CAGA,IAAIE,EAAWD,GAAY,GAC3BE,GAAAA,CAAM,CACFC,OAAQ,MACRhC,IAAK4B,EACLK,aAAc,OACdC,QAAS,CAAE,eAAgB,gBAC5BlD,MAAK,SAACC,GACL,IACIkD,EAAO,IAAIC,KAAK,CAACnD,EAAIxC,MAAO,CAAEnB,KAAM2D,EAAIxC,KAAKnB,OAC7C+G,EAAQC,SAASC,cAAc,KAC/BC,EAAOC,OAAOC,IAAIC,gBAAgBR,GACtCE,EAAMG,KAAOA,EACbH,EAAMZ,SAAWK,EACjBQ,SAASM,KAAKC,YAAYR,GAC1BA,EAAMS,QACNR,SAASM,KAAKG,YAAYV,GAC1BI,OAAOC,IAAIM,gBAAgBR,MAC5BS,OAAM,SAAUC,GACf7F,QAAQC,IAAI4F","sources":["webpack://music/./src/views/musiclist/MusicPlayList.vue?23dc","webpack://music/src/views/musiclist/MusicPlayList.vue","webpack://music/./src/views/musiclist/MusicPlayList.vue?baac","webpack://music/./src/views/musiclist/MusicPlayList.vue","webpack://music/./src/api/download.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-wrap\"},[_c('h3',[_c('div',{staticClass:\"tagWrap\"},[(!_vm.tagSwitch.songSwitch)?_c('span',{on:{\"click\":function($event){return _vm.tagSelect('songSwitch')}}},[_vm._v(\"单曲\")]):_vm._e(),(_vm.tagSwitch.songSwitch)?_c('span',{staticStyle:{\"color\":\"rgb(80, 180, 220)\"}},[_vm._v(\"单曲\")]):_vm._e(),(!_vm.tagSwitch.albumSwitch)?_c('span',{on:{\"click\":function($event){return _vm.tagSelect('albumSwitch')}}},[_vm._v(\"专辑\")]):_vm._e(),(_vm.tagSwitch.albumSwitch)?_c('span',{staticStyle:{\"color\":\"rgb(80, 180, 220)\"}},[_vm._v(\"专辑\")]):_vm._e(),(!_vm.tagSwitch.singerSwitch)?_c('span',{on:{\"click\":function($event){return _vm.tagSelect('singerSwitch')}}},[_vm._v(\"歌手\")]):_vm._e(),(_vm.tagSwitch.singerSwitch)?_c('span',{staticStyle:{\"color\":\"rgb(80, 180, 220)\"}},[_vm._v(\"歌手\")]):_vm._e(),(!_vm.tagSwitch.playListSwitch)?_c('span',{on:{\"click\":function($event){return _vm.tagSelect('playListSwitch')}}},[_vm._v(\"歌单\")]):_vm._e(),(_vm.tagSwitch.playListSwitch)?_c('span',{staticStyle:{\"color\":\"rgb(80, 180, 220)\"}},[_vm._v(\"歌单\")]):_vm._e(),(!_vm.tagSwitch.videoSwitch)?_c('span',{on:{\"click\":function($event){return _vm.tagSelect('videoSwitch')}}},[_vm._v(\"视频\")]):_vm._e(),(_vm.tagSwitch.videoSwitch)?_c('span',{staticStyle:{\"color\":\"rgb(80, 180, 220)\"}},[_vm._v(\"视频\")]):_vm._e(),(!_vm.tagSwitch.mvSwitch)?_c('span',{on:{\"click\":function($event){return _vm.tagSelect('mvSwitch')}}},[_vm._v(\"MV\")]):_vm._e(),(_vm.tagSwitch.mvSwitch)?_c('span',{staticStyle:{\"color\":\"rgb(80, 180, 220)\"}},[_vm._v(\"MV\")]):_vm._e()])]),_c('div',{staticClass:\"descript\"}),_c('div',[_c('ul',[(_vm.tagSwitch.songSwitch)?_c('div',_vm._l((_vm.musicList),function(item,index){return _c('li',{key:item.id,staticClass:\"music-list\"},[_c('span',{staticStyle:{\"width\":\"20px\"}},[_vm._v(_vm._s(index + 1)+\".\")]),_c('div',{on:{\"dblclick\":function($event){return _vm.goSongDetails(item.id)}}},[_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.name))]),_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.ar[0].name))]),_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.dt))])]),_c('div',{staticClass:\"option\"},[_c('span',{on:{\"click\":function($event){return _vm.listenMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-headset iconhover\"})]),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-folder-add iconhover\"})]):_vm._e(),(Boolean(item.mv))?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMV(item.mv, item.name)}}},[_c('i',{staticClass:\"el-icon-video-camera iconhover\"})]):_vm._e(),(item.fee == 0)?_c('span',{on:{\"click\":function($event){return _vm.getDownloadUrl(item.id, item.name)}}},[_c('i',{staticClass:\"el-icon-download iconhover\"})]):_vm._e()])])}),0):_vm._e(),(_vm.tagSwitch.albumSwitch)?_c('div',{staticClass:\"albumListClass\"},_vm._l((_vm.albumList),function(item,index){return _c('li',{key:index,staticClass:\"liWrap\",on:{\"click\":function($event){$event.stopPropagation();return _vm.goAlbumDetail(item.id)}}},[_c('div',{staticClass:\"liWrap-block1\"},[_c('img',{attrs:{\"src\":item.blurPicUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"liWrap-block2\"},[_c('div',{staticClass:\"div1\"},[_c('span',{staticClass:\"albumName\"},[_vm._v(_vm._s(item.name)+\" \"),(item.alias[0])?_c('span',{staticClass:\"albumName2\"},[_vm._v(_vm._s(item.alias[0]))]):_vm._e()])]),_c('div',[_c('div',{staticClass:\"divOther\"},[_vm._v(\" 作者：\"),_c('span',[_vm._v(_vm._s(item.artist.name))])]),_c('span',{staticClass:\"inline-block\",staticStyle:{\"display\":\"inline-block\",\"width\":\"50px\"}}),_c('div',{staticClass:\"divOther\",staticStyle:{\"width\":\"100px\"}},[_vm._v(\" 歌曲：\"),_c('span',[_vm._v(_vm._s(item.size))])])])])])}),0):_vm._e(),(_vm.tagSwitch.singerSwitch)?_c('div',{staticClass:\"singerListClass\"},_vm._l((_vm.singerList),function(item,index){return _c('li',{key:index,staticClass:\"liWrap\",on:{\"click\":function($event){$event.stopPropagation();return _vm.goSingerDetail(item.id)}}},[_c('div',{staticClass:\"liWrap-block1\"},[_c('img',{attrs:{\"src\":item.img1v1Url,\"alt\":\"\"}})]),_c('div',{staticClass:\"liWrap-block2\"},[_c('div',{staticClass:\"div1\"},[_vm._v(\" 歌手：\"),_c('span',[_vm._v(_vm._s(item.name))])]),_c('div',[_c('div',{staticClass:\"divOther\"},[_vm._v(\" 专辑：\"),_c('span',[_vm._v(_vm._s(item.albumSize))])]),_c('div',{staticClass:\"divOther\"},[_vm._v(\" MV：\"),_c('span',[_vm._v(_vm._s(item.mvSize))])])])])])}),0):_vm._e(),(_vm.tagSwitch.albumSwitch)?_c('div'):_vm._e(),(_vm.tagSwitch.playListSwitch)?_c('div',{staticClass:\"playListClass\"},[_c('div',{staticClass:\"recPlay\"},[_c('ul',{staticClass:\"playListWrap\"},_vm._l((_vm.playListTable),function(item,index){return _c('li',{key:index,staticClass:\"playListTable\"},[_c('div',{staticClass:\"image\"},[_c('img',{attrs:{\"src\":item.coverImgUrl,\"alt\":\"\",\"title\":\"\"},on:{\"click\":function($event){return _vm.goSongList(item.id)}}}),_c('span',{staticClass:\"playCount\"},[_c('i',{staticClass:\"el-icon-video-play\",staticStyle:{\"margin-right\":\"1px\"}}),_vm._v(_vm._s(item.playCount))])]),_c('p',{staticClass:\"List-title\",on:{\"click\":function($event){return _vm.goSongList(item.id)}}},[_c('span',[_vm._v(_vm._s(item.name)+\" \")])])])}),0)])]):_vm._e(),(_vm.tagSwitch.videoSwitch)?_c('div',{staticClass:\"videoListClass\"},[_c('div',{staticClass:\"videoPlay\"},[_c('ul',{staticClass:\"videoPlaywrap\"},_vm._l((_vm.videoList),function(item,index){return _c('li',{key:index,staticClass:\"videoPlayList\"},[_c('div',{staticClass:\"videoImage\"},[_c('img',{staticClass:\"videoImg\",staticStyle:{\"position\":\"absolute\",\"width\":\"240px\",\"height\":\"155px\",\"border-radius\":\"10px\"},attrs:{\"src\":item.coverUrl,\"alt\":\"\",\"title\":\"\"},on:{\"click\":function($event){return _vm.goVideo(item.vid, item.type)}}}),_c('span',{staticClass:\"videoPlayTime\"},[_c('i',{staticClass:\"el-icon-video-play\",staticStyle:{\"margin-right\":\"1px\"}}),_vm._v(_vm._s(item.playTime))]),_c('span',{staticClass:\"videoPlayTime\",staticStyle:{\"bottom\":\"0\"}},[_vm._v(_vm._s(item.durationms))])]),_c('p',{staticClass:\"List-title\",staticStyle:{\"font-size\":\"10px\"},on:{\"click\":function($event){return _vm.goVideo(item.vid, item.type)}}},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"width\":\"100%\",\"overflow\":\"hidden\",\"white-space\":\"nowrap\",\"text-overflow\":\"ellipsis\"}},[(!item.type)?_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"MV \")]):_vm._e(),_vm._v(_vm._s(item.title))]),_c('br'),_c('span',{staticStyle:{\"color\":\"rgb(199, 199, 199)\"}},[(item.markTypes)?_c('span',[_vm._v(\"by \")]):_vm._e(),_c('span',[_vm._v(_vm._s(item.creator[0].userName))])])])])}),0)])]):_vm._e(),(_vm.tagSwitch.mvSwitch)?_c('div',{staticClass:\"videoListClass\"},[_c('div',{staticClass:\"videoPlay\"},[_c('ul',{staticClass:\"videoPlaywrap\"},_vm._l((_vm.mvList),function(item,index){return _c('li',{key:index,staticClass:\"videoPlayList\"},[_c('div',{staticClass:\"videoImage\"},[_c('img',{staticClass:\"videoImg\",staticStyle:{\"position\":\"absolute\",\"width\":\"240px\",\"height\":\"155px\",\"border-radius\":\"10px\"},attrs:{\"src\":item.cover,\"alt\":\"\",\"title\":\"\"},on:{\"click\":function($event){return _vm.goVideo(item.id, item.mark)}}}),_c('span',{staticClass:\"videoPlayTime\"},[_c('i',{staticClass:\"el-icon-video-play\",staticStyle:{\"margin-right\":\"1px\"}}),_vm._v(_vm._s(item.playCount))]),_c('span',{staticClass:\"videoPlayTime\",staticStyle:{\"bottom\":\"0\"}},[_vm._v(_vm._s(item.duration))])]),_c('p',{staticClass:\"List-title\",staticStyle:{\"font-size\":\"10px\"},on:{\"click\":function($event){return _vm.goVideo(item.id, item.mark)}}},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"width\":\"100%\",\"overflow\":\"hidden\",\"white-space\":\"nowrap\",\"text-overflow\":\"ellipsis\"}},[(!item.type)?_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"MV \")]):_vm._e(),_vm._v(_vm._s(item.name))]),_c('br'),_c('span',{staticStyle:{\"color\":\"rgb(199, 199, 199)\"}},[_c('span',[_vm._v(\"by \")]),_c('span',[_vm._v(_vm._s(item.artistName))])])])])}),0)])]):_vm._e()])]),_c('div',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"10px\",\"box-sizing\":\"border-box\"}},[(_vm.count != 0)?_c('el-pagination',{attrs:{\"current-page\":_vm.currentPage,\"page-size\":15,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.count,\"background\":true},on:{\"current-change\":_vm.handleCurrentChange,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}}):_vm._e()],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}]},[_c('aplayer',{attrs:{\"autoplay\":\"\",\"fixed\":true,\"audio\":_vm.listen,\"liric-type\":1}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<style lang=\"less\" scoped>\r\n//视频列表页面样式\r\n.videoListClass {\r\n  .videoPlay {\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 240px;\r\n        height: 155px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 240px;\r\n          height: 155px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n// 歌曲播放列表样式\r\n.playListClass {\r\n  .recPlay {\r\n    margin: auto;\r\n    max-height: 630px;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .playListWrap {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 100%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .playListTable {\r\n        margin-bottom: 10px;\r\n        width: 205px;\r\n        height: 250px;\r\n        box-sizing: border-box;\r\n\r\n        .image {\r\n          position: relative;\r\n          margin: 10px auto;\r\n          width: 190px;\r\n          height: 190px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.06);\r\n            cursor: pointer;\r\n            // height: 210px;\r\n          }\r\n          img {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .playCount {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n        .List-title {\r\n          margin: 0 auto;\r\n          font-size: 15px;\r\n          // padding: 0 10px;\r\n          width: 180px;\r\n          transition: 0.2s;\r\n          text-align: center;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          white-space: nowrap;\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            display: inline-block;\r\n            width: 180px;\r\n            // text-align: center;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n//歌手列表样式\r\n.singerListClass {\r\n  .liWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin: 0 auto 10px;\r\n    padding: 0 10px;\r\n    width: 95%;\r\n    height: 60px;\r\n    border-radius: 12px;\r\n    background-color: rgba(129, 235, 199, 0.068);\r\n    box-sizing: border-box;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      transform: scale(1.01);\r\n    }\r\n    .liWrap-block1 {\r\n      width: 60px;\r\n      height: 60px;\r\n      border-radius: 10px;\r\n      background-color: rgba(178, 244, 151, 1);\r\n      transition: 0.2s;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 10px;\r\n      }\r\n      &:hover {\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .liWrap-block2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      width: 920px;\r\n      height: 60px;\r\n      font-size: 15px;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: no;\r\n      border-radius: 10px;\r\n      line-height: 40px;\r\n      box-sizing: border-box;\r\n      // background-color: rgba(226, 214, 156, 0.075);\r\n      transition: 0.2s;\r\n\r\n      span {\r\n        &:hover {\r\n          color: rgba(136, 240, 240, 0.719);\r\n        }\r\n      }\r\n      .div1 {\r\n        display: inline-block;\r\n        // width: 200px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(252, 214, 167, 0.979);\r\n          }\r\n        }\r\n      }\r\n      .divOther {\r\n        display: inline-block;\r\n        width: 100px;\r\n        margin-right: 5px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(255, 198, 129, 0.979);\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        transform: scale(1.01);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n//专辑列表页面样式\r\n.albumListClass {\r\n  .liWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin: 0 auto 10px;\r\n    padding: 0 10px;\r\n    width: 95%;\r\n    height: 60px;\r\n    border-radius: 12px;\r\n    background-color: rgba(129, 235, 199, 0.068);\r\n    box-sizing: border-box;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      // color: aqua;\r\n      transform: scale(1.01);\r\n    }\r\n    .liWrap-block1 {\r\n      width: 60px;\r\n      height: 60px;\r\n      border-radius: 10px;\r\n      background-color: rgba(178, 244, 151, 1);\r\n      transition: 0.2s;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 10px;\r\n      }\r\n      &:hover {\r\n        // color: aqua;\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .liWrap-block2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      width: 920px;\r\n      height: 60px;\r\n      font-size: 15px;\r\n      border-radius: 10px;\r\n      line-height: 40px;\r\n      box-sizing: border-box;\r\n      // background-color: rgba(226, 214, 156, 0.075);\r\n      transition: 0.2s;\r\n\r\n      span {\r\n        &:hover {\r\n          color: rgba(109, 255, 255, 0.753);\r\n        }\r\n      }\r\n      .div1 {\r\n        display: inline-block;\r\n        width: 520px;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        .albumName {\r\n          display: inline-block;\r\n          max-width: 500px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          color: rgb(196, 255, 250);\r\n          transition: 0.2s;\r\n          span {\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n        &:hover {\r\n          color: rgba(97, 252, 252, 0.979);\r\n        }\r\n      }\r\n      .divOther {\r\n        display: inline-block;\r\n        width: 200px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        // text-align: left;\r\n        margin-right: 5px;\r\n\r\n        span {\r\n          color: rgb(196, 255, 250);\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        // color: rgba(97, 252, 252, 0.979);\r\n        transform: scale(1.01);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  height: 730px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n\r\n  ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.322);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            // color: aqua;\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .playListIntro {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .playListNickName {\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      position: relative;\r\n      display: flex;\r\n      margin: 5px auto 5px;\r\n      padding: 0 10px;\r\n      width: 96%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      border-radius: 5px;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(172, 233, 236, 0.055);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        // font-size:13px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        position: absolute;\r\n        padding-left: 120px;\r\n        width: 240px;\r\n        right: 0px;\r\n        box-sizing: border-box;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: rgb(88, 255, 241);\r\n        transform: scale(1.01);\r\n        // background: rgba(141, 251, 255, 0.192);\r\n      }\r\n    }\r\n  }\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  transition: 0.2s;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  transform: scale(1.02);\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n/deep/.el-pagination {\r\n  height: 100%;\r\n}\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>\r\n      <div class=\"tagWrap\">\r\n        <span @click=\"tagSelect('songSwitch')\" v-if=\"!tagSwitch.songSwitch\"\r\n          >单曲</span\r\n        ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.songSwitch\"\r\n          >单曲</span\r\n        >\r\n        <span @click=\"tagSelect('albumSwitch')\" v-if=\"!tagSwitch.albumSwitch\"\r\n          >专辑</span\r\n        ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.albumSwitch\"\r\n          >专辑</span\r\n        >\r\n        <span @click=\"tagSelect('singerSwitch')\" v-if=\"!tagSwitch.singerSwitch\"\r\n          >歌手</span\r\n        ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.singerSwitch\"\r\n          >歌手</span\r\n        >\r\n        <span\r\n          @click=\"tagSelect('playListSwitch')\"\r\n          v-if=\"!tagSwitch.playListSwitch\"\r\n          >歌单</span\r\n        ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.playListSwitch\"\r\n          >歌单</span\r\n        ><span @click=\"tagSelect('videoSwitch')\" v-if=\"!tagSwitch.videoSwitch\"\r\n          >视频</span\r\n        ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.videoSwitch\"\r\n          >视频</span\r\n        ><span @click=\"tagSelect('mvSwitch')\" v-if=\"!tagSwitch.mvSwitch\"\r\n          >MV</span\r\n        ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.mvSwitch\"\r\n          >MV</span\r\n        >\r\n      </div>\r\n    </h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <!-- 单曲列表 -->\r\n        <div v-if=\"tagSwitch.songSwitch\">\r\n          <li\r\n            class=\"music-list\"\r\n            v-for=\"(item, index) in musicList\"\r\n            :key=\"item.id\"\r\n          >\r\n            <span style=\"width: 20px\">{{ index + 1 }}.</span>\r\n            <div @dblclick=\"goSongDetails(item.id)\">\r\n              <span class=\"music-list-span\">{{ item.name }}</span>\r\n              <span class=\"music-list-span\">{{ item.ar[0].name }}</span>\r\n              <span class=\"music-list-span\">{{ item.dt }}</span>\r\n            </div>\r\n            <div class=\"option\">\r\n              <!-- 试听 -->\r\n              <span @click=\"listenMusic(item.id, item.fee, index)\"\r\n                ><i class=\"el-icon-headset iconhover\"></i\r\n              ></span>\r\n              <!-- 添加到播放列表 -->\r\n              <span\r\n                v-if=\"item.fee == 0 || item.fee == 8\"\r\n                @click.stop=\"playMusic(item.id, item.fee, index)\"\r\n                ><i class=\"el-icon-folder-add iconhover\"></i>\r\n              </span>\r\n              <!-- 播放MV -->\r\n              <span\r\n                v-if=\"Boolean(item.mv)\"\r\n                @click.stop=\"playMV(item.mv, item.name)\"\r\n                ><i class=\"el-icon-video-camera iconhover\"></i>\r\n              </span>\r\n              <!-- 下载 -->\r\n              <span\r\n                v-if=\"item.fee == 0\"\r\n                @click=\"getDownloadUrl(item.id, item.name)\"\r\n              >\r\n                <i class=\"el-icon-download iconhover\"></i\r\n              ></span>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <!-- 专辑列表 -->\r\n        <div class=\"albumListClass\" v-if=\"tagSwitch.albumSwitch\">\r\n          <li\r\n            class=\"liWrap\"\r\n            v-for=\"(item, index) in albumList\"\r\n            :key=\"index\"\r\n            @click.stop=\"goAlbumDetail(item.id)\"\r\n          >\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.blurPicUrl\" alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                <span class=\"albumName\"\r\n                  >{{ item.name }}\r\n                  <span v-if=\"item.alias[0]\" class=\"albumName2\">{{\r\n                    item.alias[0]\r\n                  }}</span></span\r\n                >\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  作者：<span>{{ item.artist.name }}</span>\r\n                </div>\r\n                <span\r\n                  class=\"inline-block\"\r\n                  style=\"display: inline-block; width: 50px\"\r\n                ></span>\r\n                <div class=\"divOther\" style=\"width: 100px\">\r\n                  歌曲：<span>{{ item.size }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <!-- 歌手列表 -->\r\n        <div class=\"singerListClass\" v-if=\"tagSwitch.singerSwitch\">\r\n          <li\r\n            class=\"liWrap\"\r\n            v-for=\"(item, index) in singerList\"\r\n            :key=\"index\"\r\n            @click.stop=\"goSingerDetail(item.id)\"\r\n          >\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.img1v1Url\" alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                歌手：<span>{{ item.name }}</span>\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  专辑：<span>{{ item.albumSize }}</span>\r\n                </div>\r\n\r\n                <div class=\"divOther\">\r\n                  MV：<span>{{ item.mvSize }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <div v-if=\"tagSwitch.albumSwitch\"></div>\r\n        <!-- 歌单列表 -->\r\n        <div class=\"playListClass\" v-if=\"tagSwitch.playListSwitch\">\r\n          <div class=\"recPlay\">\r\n            <ul class=\"playListWrap\">\r\n              <li\r\n                class=\"playListTable\"\r\n                v-for=\"(item, index) in playListTable\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"image\">\r\n                  <img\r\n                    :src=\"item.coverImgUrl\"\r\n                    alt=\"\"\r\n                    title=\"\"\r\n                    @click=\"goSongList(item.id)\"\r\n                  />\r\n                  <span class=\"playCount\"\r\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                    >{{ item.playCount }}</span\r\n                  >\r\n                </div>\r\n                <p class=\"List-title\" @click=\"goSongList(item.id)\">\r\n                  <span>{{ item.name }} </span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <!-- 视频列表 -->\r\n        <div class=\"videoListClass\" v-if=\"tagSwitch.videoSwitch\">\r\n          <div class=\"videoPlay\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li\r\n                class=\"videoPlayList\"\r\n                v-for=\"(item, index) in videoList\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"videoImage\">\r\n                  <img\r\n                    class=\"videoImg\"\r\n                    style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                    :src=\"item.coverUrl\"\r\n                    alt=\"\"\r\n                    title=\"\"\r\n                    @click=\"goVideo(item.vid, item.type)\"\r\n                  />\r\n                  <span class=\"videoPlayTime\"\r\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                    >{{ item.playTime }}</span\r\n                  >\r\n                  <span class=\"videoPlayTime\" style=\"bottom: 0\">{{\r\n                    item.durationms\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p\r\n                  class=\"List-title\"\r\n                  style=\"font-size: 10px\"\r\n                  @click=\"goVideo(item.vid, item.type)\"\r\n                >\r\n                  <span\r\n                    style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"\r\n                    ><span v-if=\"!item.type\" style=\"color: red\">MV&nbsp;</span\r\n                    >{{ item.title }}</span\r\n                  ><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"\r\n                    ><span v-if=\"item.markTypes\">by&nbsp;</span>\r\n                    <span>{{ item.creator[0].userName }}</span></span\r\n                  >\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <!-- MV列表 -->\r\n        <div class=\"videoListClass\" v-if=\"tagSwitch.mvSwitch\">\r\n          <div class=\"videoPlay\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li\r\n                class=\"videoPlayList\"\r\n                v-for=\"(item, index) in mvList\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"videoImage\">\r\n                  <img\r\n                    class=\"videoImg\"\r\n                    style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                    :src=\"item.cover\"\r\n                    alt=\"\"\r\n                    title=\"\"\r\n                    @click=\"goVideo(item.id, item.mark)\"\r\n                  />\r\n                  <span class=\"videoPlayTime\"\r\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                    >{{ item.playCount }}</span\r\n                  >\r\n                  <span class=\"videoPlayTime\" style=\"bottom: 0\">{{\r\n                    item.duration\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p\r\n                  class=\"List-title\"\r\n                  style=\"font-size: 10px\"\r\n                  @click=\"goVideo(item.id, item.mark)\"\r\n                >\r\n                  <span\r\n                    style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"\r\n                    ><span v-if=\"!item.type\" style=\"color: red\">MV&nbsp;</span\r\n                    >{{ item.name }}</span\r\n                  ><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"\r\n                    ><span>by&nbsp;</span>\r\n                    <span>{{ item.artistName }}</span></span\r\n                  >\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n\r\n    <div style=\"text-align: center; margin-top: 10px; box-sizing: border-box\">\r\n      <el-pagination\r\n        v-if=\"count != 0\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page.sync=\"currentPage\"\r\n        :page-size=\"15\"\r\n        layout=\"prev, pager, next, jumper\"\r\n        :total=\"count\"\r\n        :background=\"true\"\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer autoplay :fixed=\"true\" :audio=\"listen\" :liric-type=\"1\"></aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getMusicInfo,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n  getSongList,\r\n  getDownloadUrl,\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      //试听音乐\r\n      listen: [],\r\n      //单曲，专辑，歌手，歌单开关\r\n      tagSwitch: {},\r\n      //MV列表\r\n      videoList: [],\r\n      //歌单列表\r\n      playListTable: [],\r\n      // 歌曲列表\r\n      musicList: [],\r\n      // 专辑列表\r\n      albumList: [],\r\n      //歌手列表\r\n      singerList: [],\r\n      //MV列表\r\n      mvList: [],\r\n      //音乐下载地址\r\n      downLoadUrl: \"\",\r\n      //标签切换\r\n      activeName: \"first\",\r\n      //搜索内容总数（歌曲，歌单，mv,等）\r\n      count: \"\",\r\n      //音乐地址\r\n      songUrlAdd: null,\r\n      //歌词\r\n      songlrc: \"\",\r\n\r\n      //初始页\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  created() {\r\n    console.log(this);\r\n    var that = this;\r\n    that.tagSwitch = that.$store.state.tagSwitch;\r\n    that.search();\r\n  },\r\n  methods: {\r\n    //标签切换\r\n    tagSelect(tag) {\r\n      var that = this;\r\n      that.$store.commit(\"tagSelect\", tag);\r\n      that.$nextTick(() => {\r\n        that.search();\r\n      });\r\n    },\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage;\r\n      var that = this;\r\n      if (that.$route.query.recplaylist) {\r\n        that.getSongList(currentPage);\r\n      } else if (that.tagSwitch.songSwitch) {\r\n        that.getSingleMuscic();\r\n      } else if (that.tagSwitch.playListSwitch) {\r\n        that.getMusicList();\r\n      } else if (that.tagSwitch.videoSwitch) {\r\n        that.getVideoList();\r\n      } else if (that.tagSwitch.mvSwitch) {\r\n        that.getMVList();\r\n      } else if (that.tagSwitch.singerSwitch) {\r\n        that.getSingerList();\r\n      } else if (that.tagSwitch.albumSwitch) {\r\n        that.getSingerList();\r\n      }\r\n    },\r\n    search() {\r\n      var that = this;\r\n      if (that.$route.query.recplaylist) {\r\n        that.getSongListDetails(); //歌单详情\r\n      } else if (that.tagSwitch.songSwitch) {\r\n        that.getSingleMuscic();\r\n      } else if (that.tagSwitch.playListSwitch) {\r\n        that.getMusicList();\r\n      } else if (that.tagSwitch.videoSwitch) {\r\n        that.getVideoList();\r\n      } else if (that.tagSwitch.mvSwitch) {\r\n        that.getMVList();\r\n      } else if (that.tagSwitch.singerSwitch) {\r\n        that.getSingerList();\r\n      } else if (that.tagSwitch.albumSwitch) {\r\n        that.getAlbumList();\r\n      }\r\n    },\r\n\r\n    //获取歌曲详情,进入详情页面\r\n    goSongDetails(ids) {\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        query: {\r\n          songId: ids,\r\n        },\r\n      });\r\n    },\r\n    //获取专辑详情\r\n    goAlbumDetail(id) {\r\n      this.$router.push({\r\n        name: \"albumDetail\",\r\n        query: {\r\n          id: id,\r\n        },\r\n      });\r\n    },\r\n    //获取歌手详情\r\n    goSingerDetail(id) {\r\n      if (id) {\r\n        this.$router.push({\r\n          name: \"singerDetail\",\r\n          query: {\r\n            id: id,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    //传入歌单id进入歌曲列表\r\n    goSongList(songListId) {\r\n      //传入歌单id进入歌曲列表\r\n      var that = this;\r\n      that.$router.push({\r\n        name: \"playListDetails\",\r\n        query: { playListTable: true, songListId: songListId },\r\n      });\r\n    },\r\n    // 获取歌单详情\r\n    getSongListDetails() {\r\n      //传入歌单id获取歌曲id和歌单详情\r\n      var that = this;\r\n      let params = {\r\n        id: that.$route.query.songListId,\r\n      };\r\n      getSongList(params).then((res) => {\r\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\r\n        console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\r\n        that.playList = res.data.playlist;\r\n        that.musicList = that.playList.tracks;\r\n        that.transMusicTime(that.playList, dt);\r\n      });\r\n    },\r\n    //将时长转化成分秒\r\n    transMusicTime(arr, dt) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        let min = parseInt(arr[i][dt] / 1000 / 60);\r\n        let sec = parseInt((arr[i][dt] / 1000) % 60);\r\n        if (min < 10) {\r\n          min = \"0\" + min;\r\n        }\r\n        if (sec < 10) {\r\n          sec = \"0\" + sec;\r\n        }\r\n        arr[i][dt] = min + \":\" + sec;\r\n      }\r\n    },\r\n    playMV(mvId, mvName) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        query: { mvId: mvId, mvName: mvName },\r\n      });\r\n    },\r\n\r\n    //试听音乐\r\n    listenMusic(id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n            console.log(\"歌词：-------\", that.songlrc);\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd, //播放地址\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              console.log(that.listen);\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //添加歌曲到播放列表\r\n    playMusic(id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs[0]);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSong\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                id: id,\r\n                // theme: that.randomColor(),\r\n              });\r\n              // console.log(\r\n              //   that.$store.state.audio,\r\n              //   \"添加歌曲后的歌曲播放列表-----\"\r\n              // );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.musicList[index].timer = false;\r\n              setTimeout(() => {\r\n                that.musicList[index].timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    //通过搜索关键词获取单曲（歌曲）\r\n    getSingleMuscic() {\r\n      var that = this;\r\n      if (that.$route.query.reload) {\r\n        console.log(\"this.$route:---\", that.$route);\r\n      }\r\n      //获取歌曲列表\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 30,\r\n        offset: (that.currentPage - 1) * 30,\r\n        type: 1, //代表获取单曲\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        let dt = \"dt\";\r\n        that.musicList = res.data.result.songs;\r\n        that.count = res.data.result.songCount;\r\n        that.transMusicTime(that.musicList, dt);\r\n        console.log(\"音乐列表：\", res.data.result);\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n      });\r\n    },\r\n    // 通过搜索关键词获取专辑\r\n    getAlbumList() {\r\n      var that = this;\r\n      //获取歌曲列表\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 30,\r\n        offset: (that.currentPage - 1) * 30,\r\n        type: 10, //代表获取专辑\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        that.albumList = res.data.result.albums;\r\n        that.count = res.data.result.albumCount;\r\n        console.log(\"专辑列表：\", res.data.result);\r\n      });\r\n    },\r\n    //通过搜索关键词获取歌手列表\r\n    getSingerList() {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n        type: 100, //代表获取歌手\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        console.log(\"获取歌手列表----\", res.data.result);\r\n        that.singerList = res.data.result.artists;\r\n        that.count = res.data.result.artistCount;\r\n      });\r\n    },\r\n    //通过搜索关键词获取歌单\r\n    getMusicList() {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n        type: 1000, //代表获取歌单\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        console.log(\"获取歌单列表----\", res.data.result);\r\n        that.playListTable = res.data.result.playlists;\r\n        that.count = res.data.result.playlistCount;\r\n        for (let i = 0; i < that.playListTable.length; i++) {\r\n          if (\r\n            String(that.playListTable[i].playCount).length > 5 &&\r\n            String(that.playListTable[i].playCount).length < 9\r\n          ) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(\r\n                0,\r\n                String(that.playListTable[i].playCount).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.playListTable[i].playCount).length == 5) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.playListTable[i].playCount).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.playListTable[i].playCount).length == 9) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.playListTable[i].playCount).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.playListTable[i].playCount).length > 9) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(\r\n                0,\r\n                String(that.playListTable[i].playCount).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //通过搜索关键词获取对应视频列表\r\n    getVideoList() {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 12,\r\n        offset: (that.currentPage - 1) * 12,\r\n        type: 1014, //代表获取视频\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        let dt = \"durationms\";\r\n        console.log(\"获取视频列表----\", res.data.result);\r\n        that.videoList = res.data.result.videos;\r\n        console.log(\"视频列表：\", that.videoList);\r\n        that.count = res.data.result.videoCount;\r\n        that.transMusicTime(that.videoList, dt);\r\n\r\n        for (let i = 0; i < that.videoList.length; i++) {\r\n          if (\r\n            String(that.videoList[i].playTime).length > 5 &&\r\n            String(that.videoList[i].playTime).length < 9\r\n          ) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(\r\n                0,\r\n                String(that.videoList[i].playTime).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.videoList[i].playTime).length == 5) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(0, 1) +\r\n              \".\" +\r\n              String(that.videoList[i].playTime).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.videoList[i].playTime).length == 9) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(0, 1) +\r\n              \".\" +\r\n              String(that.videoList[i].playTime).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.videoList[i].playTime).length > 9) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(\r\n                0,\r\n                String(that.videoList[i].playTime).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //通过搜索关键词获取对应MV列表\r\n    getMVList() {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 12,\r\n        offset: (that.currentPage - 1) * 12,\r\n        type: 1004, //代表获取MV\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        let dt = \"duration\"; //将时长字段赋值，方便传参\r\n        console.log(\"获取MV列表----\", res.data.result);\r\n        that.mvList = res.data.result.mvs;\r\n        console.log(\"MV列表：\", that.mvList);\r\n        that.count = res.data.result.mvCount;\r\n        that.transMusicTime(that.mvList, dt);\r\n\r\n        for (let i = 0; i < that.mvList.length; i++) {\r\n          if (\r\n            String(that.mvList[i].playCount).length > 5 &&\r\n            String(that.mvList[i].playCount).length < 9\r\n          ) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 5) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.mvList[i].playCount).length > 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    //获取歌曲下载地址\r\n    getDownloadUrl(songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    goVideo(vid, type) {\r\n      if (type === 0) {\r\n        this.$router.push({\r\n          name: \"mvPlay\",\r\n          query: {\r\n            mvId: vid,\r\n          },\r\n        });\r\n      } else {\r\n        this.$router.push({\r\n          name: \"videoPlay\",\r\n          query: {\r\n            vid: vid,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    randomColor() {\r\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MusicPlayList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MusicPlayList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MusicPlayList.vue?vue&type=template&id=870ecfde&scoped=true&\"\nimport script from \"./MusicPlayList.vue?vue&type=script&lang=js&\"\nexport * from \"./MusicPlayList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MusicPlayList.vue?vue&type=style&index=0&id=870ecfde&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"870ecfde\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport axios from 'axios'\r\nexport const download = function (src, filename) {\r\n    if (!src) {\r\n        return\r\n    }\r\n    let fileName = filename || '' // 文件名\r\n    axios({\r\n        method: 'get',\r\n        url: src,\r\n        responseType: 'blob',\r\n        headers: { 'content-type': 'audio/mpeg' },\r\n    }).then((res) => {\r\n        let blobType = 'application/force-download' // 设置blob请求头\r\n        let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n        let downa = document.createElement('a') // 创建A标签\r\n        let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n        downa.href = href // 下载地址\r\n        downa.download = fileName // 下载文件名\r\n        document.body.appendChild(downa)\r\n        downa.click() // 模拟点击A标签\r\n        document.body.removeChild(downa) // 下载完成移除元素\r\n        window.URL.revokeObjectURL(href) // 释放blob对象\r\n    }).catch(function (error) {\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\n// import axios from 'axios'\r\n// export const download = function (src, filename,id) {\r\n//     if (!src) {\r\n//         return\r\n//     }\r\n//     let fileName = filename || '' // 文件名\r\n//     axios({\r\n//         method: 'get',\r\n//         url: `https://autumnfish.cn/song/download/url?id=${id}`,\r\n//         responseType: 'blob',\r\n//         headers: { 'content-type': 'audio/mpeg' },\r\n//     }).then((res) => {\r\n//         let blobType = 'application/force-download' // 设置blob请求头\r\n//         let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n//         let downa = document.createElement('a') // 创建A标签\r\n//         let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n//         downa.href = href // 下载地址\r\n//         downa.download = fileName // 下载文件名\r\n//         document.body.appendChild(downa)\r\n//         downa.click() // 模拟点击A标签\r\n//         document.body.removeChild(downa) // 下载完成移除元素\r\n//         window.URL.revokeObjectURL(href) // 释放blob对象\r\n//     }).catch(function (error) {\r\n//         console.log(error)\r\n//     })\r\n// }"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","tagSwitch","songSwitch","_e","on","$event","tagSelect","_v","staticStyle","albumSwitch","singerSwitch","playListSwitch","videoSwitch","mvSwitch","_l","item","index","key","id","_s","goSongDetails","name","ar","dt","listenMusic","fee","stopPropagation","playMusic","Boolean","mv","playMV","getDownloadUrl","goAlbumDetail","attrs","blurPicUrl","alias","artist","size","goSingerDetail","img1v1Url","albumSize","mvSize","coverImgUrl","goSongList","playCount","coverUrl","goVideo","vid","type","playTime","durationms","title","creator","userName","cover","mark","duration","artistName","count","currentPage","handleCurrentChange","directives","rawName","value","expression","listen","staticRenderFns","data","videoList","playListTable","musicList","albumList","singerList","mvList","downLoadUrl","activeName","songUrlAdd","songlrc","created","console","log","that","$store","state","search","methods","tag","commit","$nextTick","$route","query","recplaylist","getSongList","getSingleMuscic","getMusicList","getVideoList","getMVList","getSingerList","getSongListDetails","getAlbumList","ids","$router","push","songId","songListId","params","then","res","playlist","playList","tracks","transMusicTime","arr","min","sec","i","mvId","mvName","timer","$message","message","playMusicUrl","url","setTimeout","getSongLyric","getSongDetails","lrc","reload","keywords","limit","offset","getMusicInfo","result","songs","songCount","albums","albumCount","artists","artistCount","playlists","playlistCount","String","videos","videoCount","mvs","mvCount","songName","download","randomColor","component","src","filename","fileName","axios","method","responseType","headers","blob","Blob","downa","document","createElement","href","window","URL","createObjectURL","body","appendChild","click","removeChild","revokeObjectURL","catch","error"],"sourceRoot":""}