{"version":3,"file":"js/561.b588d88e.js","mappings":"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","sources":["webpack://music/./src/views/categery/playlistCategary.vue?656e","webpack://music/src/views/categery/playlistCategary.vue","webpack://music/./src/views/categery/playlistCategary.vue?a82f","webpack://music/./src/views/categery/playlistCategary.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"list-wrap\"},[_c('div',[_c('div',{staticClass:\"inline-block\",staticStyle:{\"padding\":\"5px 0\"}},[_c('span',{staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\"热门歌单分类：\")]),_vm._l((_vm.hotPlaylistTag),function(item){return _c('span',{key:item.id,staticClass:\"hotCategary\",on:{\"click\":function($event){return _vm.getPlaylist(item.name)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])})],2),_c('div',{staticClass:\"inline-block clearfix\",staticStyle:{\"float\":\"right\",\"padding\":\"5px 0\"}},[_c('span',{staticStyle:{\"color\":\"#eee\"}},[_vm._v(\"当前：\")]),_c('span',{staticClass:\"categary-select\"},[_vm._v(_vm._s(_vm.currentTag))]),_vm._v(\" - \"),_c('span',{staticStyle:{\"color\":\"#eee\"}},[_vm._v(\" 排列：\")]),(_vm.order === '最热')?_c('span',{staticClass:\"categary-select\",on:{\"click\":function($event){_vm.order = '最新'}}},[_vm._v(\"最热\")]):_vm._e(),(_vm.order === '最新')?_c('span',{staticClass:\"categary-select\",on:{\"click\":function($event){_vm.order = '最热'}}},[_vm._v(\"最新\")]):_vm._e(),_vm._v(\" - \"),_c('span',{staticClass:\"categary-allTag\",on:{\"click\":function($event){_vm.categaryShow = !_vm.categaryShow}}},[_vm._v(\" 全部分类\")]),(_vm.categaryShow)?_c('div',{staticClass:\"categary-allTag-wrap\"},[_vm._l((_vm.categories),function(item,index){return _c('div',{key:index,staticClass:\"categary-allTag-wrap-list\"},[_c('div',[_c('span',[_vm._v(_vm._s(item)+\":\")])]),_c('div',{staticClass:\"categary-allTag-wrap-list-item\"},_vm._l((_vm.categoryTag[index]),function(item,index2){return _c('span',{key:index2,on:{\"click\":function($event){return _vm.getPlaylist(item.name)}}},[_vm._v(_vm._s(item.name))])}),0)])}),_c('div',{staticClass:\"categary-allTag-wrap-list\"},[_vm._m(0),_c('div',{staticClass:\"categary-allTag-wrap-list-item\"},[_c('span',{on:{\"click\":function($event){return _vm.getPlaylist('全部')}}},[_vm._v(\"全部\")])])])],2):_vm._e()])]),_c('div',{staticClass:\"playListClass\"},[_c('div',{staticClass:\"recPlay\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.playListTable.length === 0),expression:\"playListTable.length === 0\"}],staticClass:\"loading\"},[_c('i',{staticClass:\"el-icon-loading\"})]),_c('ul',{staticClass:\"playListWrap\"},_vm._l((_vm.playListTable),function(item,index){return _c('li',{key:index,staticClass:\"playListTable\"},[_c('div',{staticClass:\"image\"},[_c('img',{attrs:{\"src\":item.coverImgUrl,\"alt\":\"\",\"title\":\"\"},on:{\"click\":function($event){return _vm.goSongList(item)}}}),_c('span',{staticClass:\"playCount\"},[_c('i',{staticClass:\"el-icon-video-play\",staticStyle:{\"margin-right\":\"1px\"}}),_vm._v(_vm._s(item.playCount))])]),_c('p',{staticClass:\"List-title\",on:{\"click\":function($event){return _vm.goSongList(item)}}},[_c('span',[_vm._v(_vm._s(item.name)+\" \")])])])}),0)])])]),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.count !== 0),expression:\"count !== 0\"}],attrs:{\"current-page\":_vm.currentPage,\"page-size\":15,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.count,\"background\":true},on:{\"current-change\":_vm.handleCurrentChange,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('span',[_vm._v(\"全部:\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"list-wrap\">\r\n      <div>\r\n        <div class=\"inline-block\" style=\"padding: 5px 0\">\r\n          <span style=\"font-size: 16px\">热门歌单分类：</span>\r\n          <span\r\n            class=\"hotCategary\"\r\n            v-for=\"item in hotPlaylistTag\"\r\n            :key=\"item.id\"\r\n            @click=\"getPlaylist(item.name)\"\r\n          >\r\n            {{ item.name }}\r\n          </span>\r\n        </div>\r\n        <div class=\"inline-block clearfix\" style=\"float: right; padding: 5px 0\">\r\n          <span style=\"color: #eee\">当前：</span>\r\n          <span class=\"categary-select\">{{ currentTag }}</span> -\r\n          <span style=\"color: #eee\">&nbsp;排列：</span>\r\n          <span\r\n            class=\"categary-select\"\r\n            v-if=\"order === '最热'\"\r\n            @click=\"order = '最新'\"\r\n            >最热</span\r\n          >\r\n          <span\r\n            class=\"categary-select\"\r\n            v-if=\"order === '最新'\"\r\n            @click=\"order = '最热'\"\r\n            >最新</span\r\n          >\r\n          -\r\n          <span class=\"categary-allTag\" @click=\"categaryShow = !categaryShow\"\r\n            >&nbsp;全部分类</span\r\n          >\r\n          <!-- 全部分类窗口 -->\r\n          <div class=\"categary-allTag-wrap\" v-if=\"categaryShow\">\r\n            <div\r\n              class=\"categary-allTag-wrap-list\"\r\n              v-for=\"(item, index) in categories\"\r\n              :key=\"index\"\r\n            >\r\n              <div>\r\n                <span>{{ item }}:</span>\r\n              </div>\r\n              <div class=\"categary-allTag-wrap-list-item\">\r\n                <span\r\n                  v-for=\"(item, index2) in categoryTag[index]\"\r\n                  @click=\"getPlaylist(item.name)\"\r\n                  :key=\"index2\"\r\n                  >{{ item.name }}</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"categary-allTag-wrap-list\">\r\n              <div><span>全部:</span></div>\r\n              <div class=\"categary-allTag-wrap-list-item\">\r\n                <span @click=\"getPlaylist('全部')\">全部</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"descript\"></div> -->\r\n      </div>\r\n\r\n      <!-- <div class=\"descript\"></div> -->\r\n      <!-- 歌单列表 -->\r\n      <div class=\"playListClass\">\r\n        <div class=\"recPlay\">\r\n          <div class=\"loading\" v-show=\"playListTable.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <ul class=\"playListWrap\">\r\n            <li\r\n              class=\"playListTable\"\r\n              v-for=\"(item, index) in playListTable\"\r\n              :key=\"index\"\r\n            >\r\n              <div class=\"image\">\r\n                <img\r\n                  :src=\"item.coverImgUrl\"\r\n                  alt=\"\"\r\n                  title=\"\"\r\n                  @click=\"goSongList(item)\"\r\n                />\r\n                <span class=\"playCount\"\r\n                  ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                  >{{ item.playCount }}</span\r\n                >\r\n              </div>\r\n              <p class=\"List-title\" @click=\"goSongList(item)\">\r\n                <span>{{ item.name }} </span>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        v-show=\"count !== 0\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page.sync=\"currentPage\"\r\n        :page-size=\"15\"\r\n        layout=\"prev, pager, next, jumper\"\r\n        :total=\"count\"\r\n        :background=\"true\"\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getHotPlayList, getAllPlayList, getPlaylist } from \"@/api/api\";\r\nimport { transPlayCount } from \"@/utils/commonApi\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      hotPlaylistTag: [],\r\n      categaryShow: false,\r\n      order: \"最新\",\r\n      currentTag: \"全部\",\r\n      categories: {},\r\n      categoryTag: {\r\n        0: [],\r\n        1: [],\r\n        2: [],\r\n        3: [],\r\n        4: [],\r\n      },\r\n      playListTable: [],\r\n      count: 0,\r\n      //初始页\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  watch: {\r\n    //排列顺序发生变化时，自动获取\r\n    order() {\r\n      this.getPlaylist(this.currentTag);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getHotPlayList();\r\n    this.getAllPlayList();\r\n    this.getPlaylist(this.currentTag);\r\n  },\r\n  methods: {\r\n    //获取热门分类歌单\r\n    getHotPlayList() {\r\n      let that = this;\r\n      getHotPlayList().then((res) => {\r\n        that.hotPlaylistTag = res.data.tags;\r\n      });\r\n    },\r\n    //获取全部歌单分类\r\n    getAllPlayList() {\r\n      let that = this;\r\n      getAllPlayList().then(async (res) => {\r\n        // console.log(res)\r\n        that.categories = await res.data.categories;\r\n        for (let key in that.categoryTag) {\r\n          res.data.sub.forEach((item) => {\r\n            if (item.category == key) {\r\n              that.categoryTag[key].push(item);\r\n              // console.log(that.categoryTag)\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    //获取歌单列表----\r\n    getPlaylist(cat, notChangePage) {\r\n      let that = this;\r\n      let params = {\r\n        cat: cat,\r\n        order: that.order,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n      };\r\n      that.categaryShow = false;\r\n      if (that.currentTag === cat && notChangePage) return;\r\n      that.playListTable = []; //清空，重新获取，防止页面图片加载慢\r\n      that.currentTag = cat;\r\n      getPlaylist(params).then(async (res) => {\r\n        // console.log(res)\r\n        that.playListTable = await res.data.playlists;\r\n        // console.log(that.playListTable)\r\n        that.count = await res.data.total;\r\n        // transPlayCount(that.playListTable)\r\n        transPlayCount(that.playListTable, \"playCount\");\r\n      });\r\n    },\r\n    //传入歌单id进入歌单详情\r\n    goSongList(songListDetail) {\r\n      //传入歌单id进入歌单详情\r\n      console.log(\"歌单详情\", songListDetail);\r\n      var that = this;\r\n      that.$router.push({\r\n        name: \"playListDetails\",\r\n        params: { playListDetail: songListDetail },\r\n      });\r\n    },\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getPlaylist(that.currentTag, false);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  // color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 0 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  // background: rgba(95, 158, 160, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px;\r\n  width: 1120px;\r\n  height: 697px;\r\n  border-radius: 20px;\r\n  // background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .hotCategary {\r\n    padding: 0 5px;\r\n    font-size: 15px;\r\n    color: rgb(201, 185, 165);\r\n    // border: 1px dotted rgb(192, 190, 190);\r\n    // border-radius: 10px;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: rgb(202, 162, 108);\r\n    }\r\n  }\r\n  .categary-select {\r\n    padding: 0 10px;\r\n    // border: 1px solid #eee;\r\n    border-radius: 10px;\r\n\r\n    color: rgb(202, 162, 108);\r\n    transition: 0.3s;\r\n    &:hover {\r\n      color: rgb(202, 162, 108);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .categary-allTag {\r\n    color: rgb(201, 185, 165);\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgb(202, 162, 108);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .categary-allTag-wrap {\r\n    z-index: 100;\r\n    position: absolute;\r\n    right: 40px;\r\n    width: 600px;\r\n    height: 300px;\r\n    padding: 10px;\r\n    background: url(@/static/img/background8.jpeg); //---------------需要与主题一同更改\r\n    // background-size: cover;\r\n    border-radius: 20px;\r\n    overflow-x: hidden;\r\n    box-sizing: border-box;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .categary-allTag-wrap-list-item {\r\n      padding: 5px 20px;\r\n\r\n      box-sizing: border-box;\r\n      // background: rgb(153, 140, 140);\r\n\r\n      span {\r\n        display: inline-block;\r\n        margin: 5px 10px;\r\n        color: rgb(207, 206, 204);\r\n        transition: 0.2s;\r\n\r\n        &:hover {\r\n          color: rgb(202, 162, 108);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n/* 歌单列表样式 */\r\n.playListClass {\r\n  .recPlay {\r\n    margin: auto;\r\n    width: 100%;\r\n    height: 655px;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .playListWrap {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 0 0 10px;\r\n      width: 100%;\r\n      // max-height: 100%;\r\n      background: transparent;\r\n      overflow-x: hidden;\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n      .playListTable {\r\n        margin-bottom: 10px;\r\n        width: 205px;\r\n        height: 230px;\r\n        box-sizing: border-box;\r\n\r\n        .image {\r\n          position: relative;\r\n          margin: 10px auto;\r\n          width: 190px;\r\n          height: 190px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.06);\r\n            cursor: pointer;\r\n            // height: 210px;\r\n          }\r\n          img {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .playCount {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n        .List-title {\r\n          margin: 0 auto;\r\n          font-size: 15px;\r\n          // padding: 0 10px;\r\n          width: 180px;\r\n          transition: 0.2s;\r\n          text-align: center;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          white-space: nowrap;\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            display: inline-block;\r\n            width: 180px;\r\n            // text-align: center;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    background: transparent !important;\r\n  }\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n  /deep/ .el-pagination {\r\n    height: 100% !important;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./playlistCategary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./playlistCategary.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./playlistCategary.vue?vue&type=template&id=8451c092&scoped=true&\"\nimport script from \"./playlistCategary.vue?vue&type=script&lang=js&\"\nexport * from \"./playlistCategary.vue?vue&type=script&lang=js&\"\nimport style0 from \"./playlistCategary.vue?vue&type=style&index=0&id=8451c092&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8451c092\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","_v","_l","item","key","id","on","$event","getPlaylist","name","_s","currentTag","order","_e","categaryShow","index","categoryTag","index2","_m","directives","rawName","value","playListTable","length","expression","attrs","coverImgUrl","goSongList","playCount","count","currentPage","handleCurrentChange","staticRenderFns","data","hotPlaylistTag","categories","watch","mounted","getHotPlayList","getAllPlayList","methods","that","then","res","tags","async","sub","forEach","category","push","cat","notChangePage","params","limit","offset","playlists","total","transPlayCount","songListDetail","console","log","$router","playListDetail","component"],"sourceRoot":""}