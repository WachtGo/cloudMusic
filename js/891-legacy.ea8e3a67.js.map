{"version":3,"file":"js/891-legacy.ea8e3a67.js","mappings":"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","sources":["webpack://music/./src/views/playListDetails/playListDetails.vue?5476","webpack://music/src/views/playListDetails/playListDetails.vue","webpack://music/./src/views/playListDetails/playListDetails.vue?c370","webpack://music/./src/views/playListDetails/playListDetails.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-wrap\"},[_c('h3',[_vm._v(\"歌单详情\")]),_c('div',{staticClass:\"descript\"}),_c('div',[_c('div',{staticClass:\"wrap2\"},[_c('div',{staticClass:\"details\"},[_c('div',{staticClass:\"details-img\"},[_c('img',{attrs:{\"src\":_vm.playListDetail.coverImgUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"detailsRight\"},[_c('h3',{staticStyle:{\"margin-left\":\"0px\",\"text-align\":\"left\",\"font-size\":\"20px\"}},[_vm._v(\" \"+_vm._s(_vm.playListDetail.name)+\" \")]),_c('div',{staticStyle:{\"margin\":\"10px 0 10px 0\",\"height\":\"30px\",\"font-size\":\"14px\"}},[_c('img',{staticStyle:{\"width\":\"30px\",\"height\":\"30px\",\"border-radius\":\"15px\"},attrs:{\"src\":_vm.playListDetail.creator.avatarUrl,\"alt\":\"\"}}),_c('span',{staticClass:\"playListNickName\"},[_vm._v(\"    \"+_vm._s(_vm.playListDetail.creator.nickname)+\"  \")]),(_vm.playListDetail.creator.signature)?_c('span',[_vm._v(\"  -  \"+_vm._s(_vm.playListDetail.creator.signature))]):_vm._e()]),_c('div',{staticStyle:{\"margin\":\"10px 0 10px 0\",\"height\":\"18px\",\"font-size\":\"14px\"}},[_c('span',[_vm._v(\"标签:  \")]),_vm._l((_vm.playListDetail.tags),function(tag,index){return _c('span',{key:index},[_vm._v(_vm._s(tag)+\" \")])})],2),_c('div',{staticClass:\"playListIntro\"},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"margin-left\":\"0px\"}},[_vm._v(\" \"+_vm._s(_vm.playListDetail.description)+\" \")])])])]),_c('h3',{staticStyle:{\"margin\":\"5px 0 10px 0\"}},[_vm._v(\"歌曲 (\"),(_vm.musicList.length === 0)?_c('i',{staticClass:\"el-icon-loading\"}):_vm._e(),_vm._v(\" \"),(_vm.musicList.length !==0)?_c('span',{staticStyle:{\"font-size\":\"18px\"}},[_vm._v(_vm._s(_vm.musicList.length))]):_vm._e(),_vm._v(\" 首 )\")]),_c('ul',{staticClass:\"wrap-center\"},_vm._l((_vm.musicList),function(item,index){return _c('li',{key:item.id,staticClass:\"music-list\"},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"width\":\"20px\"}},[_vm._v(_vm._s(index + 1)+\".\")]),_c('div',{on:{\"dblclick\":function($event){return _vm.goSongDetails(item.id)}}},[_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.name))]),_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.ar[0].name))]),_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.dt))])]),_c('div',{staticClass:\"option\"},[_c('span',{on:{\"click\":function($event){return _vm.listenMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-headset iconhover\"})]),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-folder-add iconhover\"})]):_vm._e(),(Boolean(item.mv))?_c('span',{on:{\"click\":function($event){return _vm.playMV(item.mv)}}},[_c('i',{staticClass:\"el-icon-video-camera iconhover\"})]):_vm._e(),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.getDownloadUrl(item.id, item.name)}}},[_c('i',{staticClass:\"el-icon-download iconhover\"})]):_vm._e(),(item.fee != 0)?_c('span'):_vm._e()])])}),0),_c('div',{staticStyle:{\"padding\":\"0px 50px\"}},[_c('h3',{staticStyle:{\"margin\":\"5px 0 10px 0\"}},[_vm._v(\"评论(\"+_vm._s(_vm.commentCount)+\"条)\")]),_vm._l((_vm.playListComment),function(item){return _c('div',{key:item.id,staticClass:\"hoverBackColor\"},[_c('img',{staticStyle:{\"width\":\"50px\",\"border-radius\":\"25px\"},attrs:{\"src\":item.user.avatarUrl}}),_c('span',{staticStyle:{\"display\":\"inline-block\",\"margin-left\":\"10px\",\"font-size\":\"15px\"}},[_vm._v(_vm._s(item.user.nickname)+\"  :  \")]),_c('span',{staticStyle:{\"margin-left\":\"20px\",\"width\":\"750px\"}},[_vm._v(\" \"+_vm._s(item.content)+\" \")]),_c('div',{staticStyle:{\"height\":\"30px\"}},[_c('span',{staticStyle:{\"float\":\"right\",\"width\":\"130px\"}},[_vm._v(\"  时间：\"+_vm._s(item.timeStr))]),_c('span',{staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(item.likedCount)+\" 赞   \")])])])}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[(_vm.commentCount != 0)?_c('el-pagination',{attrs:{\"current-page\":_vm.currentPage,\"page-size\":7,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.commentCount,\"background\":true},on:{\"current-change\":_vm.playListHandleCurrentChange,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}}):_vm._e()],1)],2)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>歌单详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"wrap2\">\r\n        <!-- 歌单信息 -->\r\n        <div class=\"details\">\r\n          <div class=\"details-img\">\r\n            <img :src=\"playListDetail.coverImgUrl\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ playListDetail.name }}\r\n            </h3>\r\n            <div style=\"margin: 10px 0 10px 0; height: 30px; font-size: 14px\">\r\n              <img :src=\"playListDetail.creator.avatarUrl\"\r\n                   alt=\"\"\r\n                   style=\"width: 30px; height: 30px; border-radius: 15px\" />\r\n              <span class=\"playListNickName\">&nbsp;&nbsp;&nbsp;&nbsp;{{\r\n                  playListDetail.creator.nickname\r\n                }}&nbsp;&nbsp;</span><span v-if=\"playListDetail.creator.signature\">&nbsp;&nbsp;-&nbsp;&nbsp;{{\r\n                  playListDetail.creator.signature\r\n                }}</span>\r\n            </div>\r\n            <div style=\"margin: 10px 0 10px 0; height: 18px; font-size: 14px\">\r\n              <span>标签:&nbsp;&nbsp;</span><span v-for=\"(tag, index) in playListDetail.tags\"\r\n                    :key=\"index\">{{ tag }}&nbsp;</span>\r\n            </div>\r\n            <div class=\"playListIntro\"\r\n                 style=\"\">\r\n              <span style=\"display: inline-block; margin-left: 0px\">\r\n                {{ playListDetail.description }}\r\n              </span>\r\n            </div>\r\n            <!-- <i class=\"iFont el-icon-star-off\"\r\n               @click=\"collectPlaylist\"></i> -->\r\n          </div>\r\n        </div>\r\n        <!-- 歌单歌曲列表 -->\r\n        <h3 style=\"margin: 5px 0 10px 0\">歌曲 (<i v-if=\"musicList.length === 0\"\r\n             class=\"el-icon-loading\"></i> <span style=\"font-size:18px;\"\r\n                v-if=\"musicList.length !==0\">{{musicList.length }}</span> 首 )</h3>\r\n\r\n        <ul class=\"wrap-center\">\r\n          <li class=\"music-list\"\r\n              v-for=\"(item, index) in musicList\"\r\n              :key=\"item.id\">\r\n            <span style=\"display: inline-block; width: 20px\">{{ index + 1 }}.</span>\r\n            <div @dblclick=\"goSongDetails(item.id)\">\r\n              <span class=\"music-list-span\">{{ item.name }}</span>\r\n              <span class=\"music-list-span\">{{ item.ar[0].name }}</span>\r\n              <span class=\"music-list-span\">{{ item.dt }}</span>\r\n            </div>\r\n            <div class=\"option\">\r\n              <span @click=\"listenMusic(item.id, item.fee, index)\"><i class=\"el-icon-headset iconhover\"></i></span>\r\n              <!-- 添加到播放列表 -->\r\n              <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                    @click.stop=\"playMusic(item.id, item.fee, index)\"><i class=\"el-icon-folder-add iconhover\"></i>\r\n              </span>\r\n              <span v-if=\"Boolean(item.mv)\"\r\n                    @click=\"playMV(item.mv)\"><i class=\"el-icon-video-camera iconhover\"></i>\r\n              </span>\r\n              <!-- <span v-if=\"!Boolean(item.mv)\">&nbsp;&nbsp;&nbsp; </span> -->\r\n              <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                    @click.stop=\"getDownloadUrl(item.id, item.name)\"><i class=\"el-icon-download iconhover\"></i></span><span v-if=\"item.fee != 0\"> </span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div style=\"padding: 0px 50px\">\r\n          <h3 style=\"margin: 5px 0 10px 0\">评论({{ commentCount }}条)</h3>\r\n          <div class=\"hoverBackColor\"\r\n               v-for=\"item in playListComment\"\r\n               :key=\"item.id\">\r\n            <img :src=\"item.user.avatarUrl\"\r\n                 style=\"width: 50px; border-radius: 25px\" />\r\n            <span style=\"display: inline-block; margin-left: 10px; font-size: 15px\">{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span>\r\n            <span style=\"margin-left: 20px; width: 750px\">\r\n              {{ item.content }}\r\n            </span>\r\n            <div style=\"height: 30px\">\r\n              <span style=\"float: right; width: 130px\">&nbsp;&nbsp;时间：{{ item.timeStr }}</span><span style=\"float: right\">{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"text-align: center\">\r\n            <el-pagination v-if=\"commentCount != 0\"\r\n                           @current-change=\"playListHandleCurrentChange\"\r\n                           :current-page.sync=\"currentPage\"\r\n                           :page-size=\"7\"\r\n                           layout=\"prev, pager, next, jumper\"\r\n                           :total=\"commentCount\"\r\n                           :background=\"true\">\r\n            </el-pagination>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  getPlaylistDetail,\r\n  getSongList,\r\n  getPlayListComment,\r\n} from '@/api/api'\r\nimport { getTimestamp, transMusicTime, download } from '@/utils/commonApi'\r\nimport { playMusic, listenMusic } from '@/utils/musicPlay'\r\n// import { getToken } from \"@/utils/auth\";\r\nexport default {\r\n  // props: ['songListId'],\r\n  data() {\r\n    return {\r\n      //歌单id\r\n      songListId: '',\r\n      //评论分页\r\n      currentPage: 1,\r\n      // 歌曲数组\r\n      musicList: [],\r\n      //下载音乐的地址\r\n      DownloadSongUrl: '',\r\n      //mv地址\r\n      mvUrl: '',\r\n      //搜索歌曲总数\r\n      count: '',\r\n      playListComment: [\r\n        {\r\n          user: {\r\n            avatarUrl: '',\r\n          },\r\n        },\r\n      ],\r\n      commentCount: '',\r\n      //MV\r\n      songMV: [],\r\n      //歌单详情\r\n      playListDetail: { creator: { avatarUrl: '' } },\r\n    }\r\n  },\r\n  mounted() {\r\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\r\n    if (this.$route.params.songListId) {\r\n      localStorage.setItem('songListId', this.$route.params.songListId)\r\n    }\r\n    // 判断是否使用缓存\r\n    this.$route.params.songListId\r\n      ? (this.songListId = this.$route.params.songListId)\r\n      : (this.songListId = localStorage.getItem('songListId'))\r\n    this.getPlaylistDetail()\r\n    this.getSongList()\r\n    this.getPlayListComment()\r\n  },\r\n  methods: {\r\n    //切换歌单评论\r\n    playListHandleCurrentChange(currentPage) {\r\n      var that = this\r\n      that.currentPage = currentPage\r\n      that.getPlayListComment()\r\n    },\r\n    //获取歌单评论\r\n    getPlayListComment() {\r\n      var that = this\r\n      let params = {\r\n        id: that.songListId,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      }\r\n      getPlayListComment(params).then((res) => {\r\n        // console.log(\"歌单评论：\", res.data);\r\n        this.playListComment = res.data.comments\r\n        that.commentCount = res.data.total\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      })\r\n    },\r\n\r\n    //获取歌曲详情,进入详情页面\r\n    goSongDetails(ids) {\r\n      this.$router.push({\r\n        name: 'songDetails',\r\n        params: {\r\n          songId: ids,\r\n        },\r\n      })\r\n    },\r\n    // 播放MV\r\n    playMV(mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: 'mvPlay',\r\n        params: { mvId: mvId },\r\n      })\r\n    },\r\n    //试听音乐\r\n    listenMusic(id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this\r\n      var list = 'musicList'\r\n      listenMusic(id, fee, index, list, that)\r\n    },\r\n    //添加播放列表\r\n    playMusic(id, fee, index) {\r\n      var that = this\r\n      var list = 'musicList'\r\n      playMusic(id, fee, index, list, that)\r\n    },\r\n\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage\r\n      var that = this\r\n      that.getPlaylistDetail(currentPage)\r\n    },\r\n\r\n    //获取歌曲下载地址\r\n    getDownloadUrl(songId, songName) {\r\n      var that = this\r\n      let params = {\r\n        id: songId,\r\n      }\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName)\r\n        that.$message({\r\n          type: 'success',\r\n          message: '开始下载了',\r\n        })\r\n      })\r\n    },\r\n    getPlaylistDetail() {\r\n      //传入歌单id获取歌曲id和歌单详情\r\n      var that = this\r\n      let params = {\r\n        id: that.songListId,\r\n      }\r\n      getPlaylistDetail(params).then((res) => {\r\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\r\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\r\n        that.playListDetail = res.data.playlist\r\n        // that.musicList = that.playListDetail.tracks;\r\n      })\r\n    },\r\n    getSongList() {\r\n      //获取歌单所有歌曲\r\n      var that = this\r\n      let params = {\r\n        id: that.songListId,\r\n      }\r\n      getSongList(params).then((res) => {\r\n        that.musicList = res.data.songs\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, 'timer', true)\r\n        }\r\n        transMusicTime(that.musicList, 'dt')\r\n      })\r\n    },\r\n    // collectPlaylist () {\r\n    //   // let a = encodeURIComponent(\"NMTID=00OzCh7YMHCWQm1ZU9Vogn9qK4feTAAAAGCc3SE0Q; Max-Age=315360000; Expires=Tue, 03 Aug 2032 13:59:52 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bf0fc69a8d2f6be4455ded1d5066ff6a4b993166e004087dd367fe124475fa63054c4bb8a8a030b49b26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Thu, 02 Feb 2023 13:59:52 GMT; Path=/; HTTPOnly;__csrf=e0281d26dcbef96212ed4b7db9e68461; Max-Age=1296010; Expires=Sun, 21 Aug 2022 14:00:02 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Sat, 06 Aug 2022 13:59:52 GMT; Path=/;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly\")\r\n    //   // let cookie = \"MUSIC_SNS=; Max-Age=0; Expires=Sun, 07 Aug 2022 07:29:20 GMT; Path=/;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;NMTID=00O7WKRxVwcZw0Uw0D6ubODlxpdLj4AAAGCdzVVLw; Max-Age=315360000; Expires=Wed, 04 Aug 2032 07:29:20 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bfe793a0a6f0d4dbbbb88db8dba5edf83d993166e004087dd37a99ad5471c3636273479095928a9cef26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Fri, 03 Feb 2023 07:29:20 GMT; Path=/; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;__csrf=d1f2fa83b3815f03a3448349af4ecc04; Max-Age=1296010; Expires=Mon, 22 Aug 2022 07:29:30 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly\"\r\n    //   // this.$store.commit('setTOKEN', cookie)\r\n    //   let params = {\r\n    //     t: '1',\r\n    //     id: this.songListId,\r\n    //     // timestamp: getTimestamp()\r\n    //     cookie: getToken(),\r\n    //   }\r\n    //   collectPlaylist(params).then((res) => {\r\n    //     console.log(res, '收藏返回')\r\n    //     if (res.data.code === 200) {\r\n    //       this.$message({\r\n    //         type: 'success',\r\n    //         message: '收藏成功'\r\n    //       })\r\n    //     }\r\n\r\n    //   })\r\n    // }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .wrap2 {\r\n    height: 680px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .playListIntro {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .playListNickName {\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n    .wrap-center {\r\n      max-height: 500px;\r\n      overflow-x: hidden;\r\n      // border-top: 1px exclusion chocolate;\r\n\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n      .music-list {\r\n        position: relative;\r\n        display: flex;\r\n        margin: 5px auto;\r\n        padding: 0 10px;\r\n        width: 96%;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        overflow: hidden;\r\n        color: rgba(255, 255, 255, 1);\r\n        font-weight: bolder;\r\n        -o-text-overflow: ellipsis;\r\n        text-overflow: ellipsis;\r\n        border-radius: 5px;\r\n        background: rgba(59, 165, 168, 0.048);\r\n        transition: 0.2s;\r\n\r\n        .music-list-span {\r\n          display: inline-block;\r\n          width: 270px;\r\n          text-align: center;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n        .option {\r\n          position: absolute;\r\n          padding-left: 150px;\r\n          width: 240px;\r\n          right: 10px;\r\n          box-sizing: border-box;\r\n\r\n          span {\r\n            display: inline-block;\r\n            width: 30px;\r\n            &:hover {\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n\r\n        &:hover {\r\n          color: aquamarine;\r\n          transform: scale(1.01);\r\n          // background: rgba(146, 240, 243, 0.247);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/deep/ .el-pager {\r\n  height: 30px !important;\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n//   btn-quickprev el-icon-more\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n// .iFont {\r\n//   position: absolute;\r\n//   top: 0;\r\n//   right: 5px;\r\n//   font-size: 25px;\r\n//   &:hover {\r\n//     cursor: pointer;\r\n//     color: rgb(215, 233, 57);\r\n//   }\r\n// }\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./playListDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./playListDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./playListDetails.vue?vue&type=template&id=db4e9d0e&scoped=true&\"\nimport script from \"./playListDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./playListDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./playListDetails.vue?vue&type=style&index=0&id=db4e9d0e&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"db4e9d0e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","playListDetail","coverImgUrl","staticStyle","_s","name","creator","avatarUrl","nickname","signature","_e","_l","tag","index","key","description","musicList","length","item","id","on","$event","goSongDetails","ar","dt","listenMusic","fee","stopPropagation","playMusic","Boolean","mv","playMV","getDownloadUrl","commentCount","user","content","timeStr","likedCount","currentPage","playListHandleCurrentChange","staticRenderFns","data","songListId","DownloadSongUrl","mvUrl","count","playListComment","songMV","mounted","$route","params","localStorage","setItem","getPlaylistDetail","getSongList","getPlayListComment","methods","that","limit","offset","res","total","ids","$router","push","songId","mvId","list","handleCurrentChange","songName","download","url","$message","type","message","playlist","songs","transMusicTime","component"],"sourceRoot":""}