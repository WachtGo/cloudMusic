{"version":3,"file":"js/674-legacy.e97a80c7.js","mappings":"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","sources":["webpack://music/./src/views/singerDetail/singerDetail.vue?ff0d","webpack://music/src/views/singerDetail/singerDetail.vue","webpack://music/./src/views/singerDetail/singerDetail.vue?6678","webpack://music/./src/views/singerDetail/singerDetail.vue","webpack://music/./src/api/download.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-wrap\"},[_c('h3',[_vm._v(\"歌手详情\")]),_c('div',{staticClass:\"descript\"}),_c('div',[_c('div',{staticClass:\"ul\"},[_c('div',{staticClass:\"playListDetailes\"},[_c('div',{staticClass:\"playListImg\"},[_c('img',{attrs:{\"src\":_vm.singerDesc.img1v1Url,\"alt\":\"\"}})]),_c('div',{staticClass:\"detailsRight\"},[_c('h3',{staticStyle:{\"margin-left\":\"0px\",\"text-align\":\"left\",\"font-size\":\"20px\"}},[_vm._v(\" \"+_vm._s(_vm.singerDesc.name)+\" \")]),_c('div',{staticStyle:{\"font-size\":\"14px\"}},[_c('div',{staticClass:\"aliasClass\"},[(_vm.singerDesc.alias[0])?_c('span',{staticClass:\"playListNickName\"},[_vm._v(_vm._s(_vm.singerDesc.alias[0]))]):_vm._e(),(_vm.singerDesc.alias[1])?_c('span',{staticClass:\"playListNickName\"},[_vm._v(\"-\")]):_vm._e(),_c('span',{staticClass:\"playListNickName2\"},[_vm._v(_vm._s(_vm.singerDesc.alias[1]))]),_vm._m(0)]),_c('div',{staticClass:\"option\"},[_c('div',{staticClass:\"flexBetween\"},[_c('span',{staticClass:\"inline-block\",on:{\"click\":function($event){return _vm.getSingerSongList('songSwitch')}}},[_vm._v(\"歌曲：\"),_c('span',{staticClass:\"musicSize\"},[_vm._v(_vm._s(_vm.singerDesc.musicSize))])]),_c('span',{staticClass:\"inline-block\",on:{\"click\":function($event){return _vm.getSingerAlbum('albumSwitch')}}},[_vm._v(\"专辑：\"),_c('span',{staticClass:\"musicSize\"},[_vm._v(_vm._s(_vm.singerDesc.albumSize))])]),_c('span',{staticClass:\"inline-block\",on:{\"click\":function($event){return _vm.getSingerMvList('mvSwitch')}}},[_vm._v(\"MV：\"),_c('span',{staticClass:\"musicSize\"},[_vm._v(_vm._s(_vm.singerDesc.mvSize))])])])])])])]),(_vm.tagSwitch.detailSwitch)?_c('div',{staticClass:\"singerDetail\"},[_c('h3',{staticStyle:{\"font-size\":\"15px\"}},[_vm._v(\"简介：\")]),_c('p',[_vm._v(\"        \"+_vm._s(_vm.singerDesc.briefDesc)+\" \")])]):_vm._e(),(_vm.tagSwitch.songSwitch)?_c('div',{attrs:{\"id\":\"singleSongs\"}},[_c('h3',[_vm._v(\" 歌曲：\"+_vm._s(_vm.songList.length)+\"    \"),_c('span',{staticStyle:{}},[_vm._v(\"(受接口限制-这里最多获取50首歌手热门歌曲-建议直接搜)\")])]),_vm._l((_vm.songList),function(item,index){return _c('div',{key:index,staticClass:\"SingsList\"},[_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"20px\"}},[_vm._v(_vm._s(index + 1)+\".\")]),_c('div',{on:{\"dblclick\":function($event){return _vm.goSongDetails(item.id)}}},[_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"350px\"}},[_vm._v(\" \"+_vm._s(item.name)+\" \")]),_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"250px\",\"text-align\":\"center\"}},[_vm._v(\" \"+_vm._s(item.ar[0].name)+\" \")]),_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"230px\"}},[_vm._v(\" \"+_vm._s(item.dt)+\" \")]),_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"150px\"}})]),_c('span',{staticClass:\"song-list song-list-option\"},[_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.listenMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-headset iconhover\"})]),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-folder-add iconhover\"})]):_vm._e(),(Boolean(item.mv))?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMV(item.mv)}}},[_c('i',{staticClass:\"el-icon-video-camera iconhover\"})]):_vm._e(),(item.fee == 0)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.getDownloadUrl(item.id, item.name)}}},[_c('i',{staticClass:\"el-icon-download iconhover\"})]):_vm._e()])])})],2):_vm._e(),(_vm.tagSwitch.albumSwitch)?_c('div',{attrs:{\"id\":\"albumList\"}},_vm._l((_vm.albumList),function(item,index){return _c('li',{key:index,staticClass:\"liWrap\",on:{\"click\":function($event){$event.stopPropagation();return _vm.goAlbumDetail(item.id)}}},[_c('div',{staticClass:\"liWrap-block1\"},[_c('img',{attrs:{\"src\":item.blurPicUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"liWrap-block2\"},[_c('div',{staticClass:\"div1\"},[_c('span',{staticClass:\"albumName\"},[_vm._v(_vm._s(item.name)+\" \"),(item.alias[0])?_c('span',{staticClass:\"albumName2\"},[_vm._v(_vm._s(item.alias[0]))]):_vm._e()])]),_c('div',[_c('div',{staticClass:\"divOther\"}),_c('span',{staticClass:\"inline-block\",staticStyle:{\"display\":\"inline-block\",\"width\":\"50px\"}}),_c('div',{staticClass:\"divOther\",staticStyle:{\"width\":\"100px\"}},[_vm._v(\" 歌曲：\"),_c('span',[_vm._v(_vm._s(item.size))])])])])])}),0):_vm._e(),(_vm.tagSwitch.mvSwitch)?_c('div',{attrs:{\"id\":\"singerMvs\"}},[_c('h3',{staticStyle:{\"margin\":\"0 auto\"}},[_vm._v(\" MV：\"+_vm._s(_vm.mvList.length)+\"    \"),_c('span',{staticStyle:{}},[_vm._v(\"(受接口限制-这里最多获取10个-建议直接搜)\")])]),_c('ul',{staticClass:\"videoPlaywrap\"},_vm._l((_vm.mvList),function(item,index){return _c('li',{key:index,staticClass:\"videoPlayList\"},[_c('div',{staticClass:\"videoImage\"},[_c('img',{staticClass:\"videoImg\",staticStyle:{\"position\":\"absolute\",\"width\":\"240px\",\"height\":\"155px\",\"border-radius\":\"10px\"},attrs:{\"src\":item.imgurl16v9,\"alt\":\"\",\"title\":\"\"},on:{\"click\":function($event){return _vm.goMv(item.id)}}}),_c('span',{staticClass:\"videoPlayTime\"},[_c('i',{staticClass:\"el-icon-video-play\",staticStyle:{\"margin-right\":\"1px\"}}),_vm._v(_vm._s(item.playCount))]),_c('span',{staticClass:\"videoPlayTime\",staticStyle:{\"bottom\":\"0\"}},[_vm._v(_vm._s(item.duration))])]),_c('p',{staticClass:\"List-title\",staticStyle:{\"font-size\":\"10px\"}},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"width\":\"100%\",\"overflow\":\"hidden\",\"white-space\":\"nowrap\",\"text-overflow\":\"ellipsis\"}},[(!item.type)?_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"MV \")]):_vm._e(),_vm._v(_vm._s(item.name))]),_c('br'),_c('span',{staticStyle:{\"color\":\"rgb(199, 199, 199)\"}},[_c('span',[_vm._v(\"by \")]),_c('span',[_vm._v(_vm._s(item.artistName))])])])])}),0)]):_vm._e()])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}]},[_c('aplayer',{attrs:{\"autoplay\":true,\"fixed\":true,\"audio\":_vm.listen,\"liric-type\":1}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('br'),_c('span',{staticStyle:{\"color\":\"antiquewhite\"}})])}]\n\nexport { render, staticRenderFns }","<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n\r\n  .ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.322);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto 10px;\r\n      padding: 10px;\r\n      width: 96%;\r\n      height: 170px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(221, 239, 243, 0.11);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 150px;\r\n          height: 150px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 150px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          position: absolute;\r\n          bottom: 0;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              margin-right: 40px;\r\n              transition: 0.2s;\r\n              .musicSize {\r\n                color: rgb(193, 243, 226);\r\n                transition: 0.2s;\r\n                &:hover {\r\n                  color: rgb(109, 247, 201);\r\n                }\r\n              }\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                // color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .songTns {\r\n          width: 100%;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .aliasClass {\r\n          position: absolute;\r\n          top: 69px;\r\n        }\r\n        .playListNickName,\r\n        .playListNickName2 {\r\n        }\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-right: 20px;\r\n        }\r\n\r\n        .musicSize {\r\n          color: rgb(170, 240, 240);\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(95, 158, 160, 0.322);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n  #albumList {\r\n    .liWrap {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      margin: 0 auto 10px;\r\n      padding: 0 10px;\r\n      width: 95%;\r\n      height: 60px;\r\n      border-radius: 12px;\r\n      background-color: rgba(129, 235, 199, 0.068);\r\n      box-sizing: border-box;\r\n      transition: 0.2s;\r\n      &:hover {\r\n        transform: scale(1.01);\r\n      }\r\n      .liWrap-block1 {\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 10px;\r\n        background-color: rgba(178, 244, 151, 1);\r\n        transition: 0.2s;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          border-radius: 10px;\r\n        }\r\n        &:hover {\r\n          transform: scale(1.05);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .liWrap-block2 {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 10px;\r\n        width: 920px;\r\n        height: 60px;\r\n        font-size: 15px;\r\n        border-radius: 10px;\r\n        line-height: 40px;\r\n        box-sizing: border-box;\r\n        // background-color: rgba(226, 214, 156, 0.075);\r\n        transition: 0.2s;\r\n\r\n        span {\r\n          &:hover {\r\n            color: rgba(109, 255, 255, 0.753);\r\n          }\r\n        }\r\n        .div1 {\r\n          display: inline-block;\r\n          width: 520px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          .albumName {\r\n            display: inline-block;\r\n            max-width: 500px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n            span {\r\n              &:hover {\r\n                color: rgba(97, 252, 252, 0.979);\r\n              }\r\n            }\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n        .divOther {\r\n          display: inline-block;\r\n          width: 200px;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          // text-align: left;\r\n          margin-right: 5px;\r\n\r\n          span {\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n        }\r\n        &:hover {\r\n          // color: rgba(97, 252, 252, 0.979);\r\n          transform: scale(1.01);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  #singerMvs {\r\n    margin: 0 auto;\r\n    padding: 0px 10px 20px;\r\n    width: 96%;\r\n    height: 420px;\r\n    border-radius: 10px;\r\n    background: rgba(219, 255, 242, 0.151);\r\n    box-sizing: border-box;\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 220px;\r\n        height: 180px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 220px;\r\n          height: 132px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>歌手详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"ul\">\r\n        <div class=\"playListDetailes\">\r\n          <div class=\"playListImg\">\r\n            <img :src=\"singerDesc.img1v1Url\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ singerDesc.name }}\r\n            </h3>\r\n            <div style=\"font-size: 14px\">\r\n              <div class=\"aliasClass\">\r\n                <span class=\"playListNickName\"\r\n                      v-if=\"singerDesc.alias[0]\">{{\r\n                  singerDesc.alias[0]\r\n                }}</span>\r\n                <span class=\"playListNickName\"\r\n                      v-if=\"singerDesc.alias[1]\">-</span><span class=\"playListNickName2\">{{ singerDesc.alias[1] }}</span><span><br />\r\n                  <span style=\"color: antiquewhite\"></span></span>\r\n              </div>\r\n\r\n              <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <span class=\"inline-block\"\r\n                        @click=\"getSingerSongList('songSwitch')\">歌曲：<span class=\"musicSize\">{{\r\n                      singerDesc.musicSize\r\n                    }}</span></span>\r\n                  <span class=\"inline-block\"\r\n                        @click=\"getSingerAlbum('albumSwitch')\">专辑：<span class=\"musicSize\">{{\r\n                      singerDesc.albumSize\r\n                    }}</span>\r\n                  </span>\r\n                  <span class=\"inline-block\"\r\n                        @click=\"getSingerMvList('mvSwitch')\">MV：<span class=\"musicSize\">{{ singerDesc.mvSize }}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"singerDetail\"\r\n             v-if=\"tagSwitch.detailSwitch\">\r\n          <h3 style=\"font-size: 15px\">简介：</h3>\r\n          <p>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ singerDesc.briefDesc }}\r\n          </p>\r\n        </div>\r\n        <div id=\"singleSongs\"\r\n             v-if=\"tagSwitch.songSwitch\">\r\n          <h3>\r\n            歌曲：{{ songList.length }}&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size：10px;\">(受接口限制-这里最多获取50首歌手热门歌曲-建议直接搜)</span>\r\n          </h3>\r\n          <div class=\"SingsList\"\r\n               v-for=\"(item, index) in songList\"\r\n               :key=\"index\">\r\n            <span class=\"song-list\"\r\n                  style=\"width: 20px\">{{ index + 1 }}.</span>\r\n            <div @dblclick=\"goSongDetails(item.id)\">\r\n              <span class=\"song-list\"\r\n                    style=\"width: 350px\">\r\n                {{ item.name }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 250px; text-align: center\">\r\n                {{ item.ar[0].name }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 230px\">\r\n                {{ item.dt }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 150px\"> </span>\r\n            </div>\r\n            <span class=\"song-list song-list-option\">\r\n              <span @click.stop=\"listenMusic(item.id, item.fee, index)\"><i class=\"el-icon-headset iconhover\"></i></span>\r\n              <!-- 添加到播放列表 -->\r\n              <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                    @click.stop=\"playMusic(item.id, item.fee, index)\"><i class=\"el-icon-folder-add iconhover\"></i>\r\n              </span>\r\n              <span v-if=\"Boolean(item.mv)\"\r\n                    @click.stop=\"playMV(item.mv)\"><i class=\"el-icon-video-camera iconhover\"></i></span>\r\n              <span v-if=\"item.fee == 0\"\r\n                    @click.stop=\"getDownloadUrl(item.id, item.name)\"><i class=\"el-icon-download iconhover\"></i></span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div id=\"albumList\"\r\n             v-if=\"tagSwitch.albumSwitch\">\r\n          <li class=\"liWrap\"\r\n              v-for=\"(item, index) in albumList\"\r\n              :key=\"index\"\r\n              @click.stop=\"goAlbumDetail(item.id)\">\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.blurPicUrl\"\r\n                   alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                <span class=\"albumName\">{{ item.name }}\r\n                  <span v-if=\"item.alias[0]\"\r\n                        class=\"albumName2\">{{\r\n                    item.alias[0]\r\n                  }}</span></span>\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  <!-- 作者：<span>{{ item.artist.name }}</span> -->\r\n                </div>\r\n                <span class=\"inline-block\"\r\n                      style=\"display: inline-block; width: 50px\"></span>\r\n                <div class=\"divOther\"\r\n                     style=\"width: 100px\">\r\n                  歌曲：<span>{{ item.size }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <div id=\"singerMvs\"\r\n             v-if=\"tagSwitch.mvSwitch\">\r\n          <h3 style=\"margin: 0 auto\">\r\n            MV：{{ mvList.length }}&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size：10px;\">(受接口限制-这里最多获取10个-建议直接搜)</span>\r\n          </h3>\r\n\r\n          <ul class=\"videoPlaywrap\">\r\n            <li class=\"videoPlayList\"\r\n                v-for=\"(item, index) in mvList\"\r\n                :key=\"index\">\r\n              <div class=\"videoImage\">\r\n                <img class=\"videoImg\"\r\n                     style=\"\r\n                    position: absolute;\r\n                    width: 240px;\r\n                    height: 155px;\r\n                    border-radius: 10px;\r\n                  \"\r\n                     :src=\"item.imgurl16v9\"\r\n                     alt=\"\"\r\n                     title=\"\"\r\n                     @click=\"goMv(item.id)\" />\r\n                <span class=\"videoPlayTime\"><i class=\"el-icon-video-play\"\r\n                     style=\"margin-right: 1px\"></i>{{ item.playCount }}</span>\r\n                <span class=\"videoPlayTime\"\r\n                      style=\"bottom: 0\">{{\r\n                  item.duration\r\n                }}</span>\r\n              </div>\r\n\r\n              <p class=\"List-title\"\r\n                 style=\"font-size: 10px\">\r\n                <span style=\"\r\n                    display: inline-block;\r\n                    width: 100%;\r\n                    overflow: hidden;\r\n                    white-space: nowrap;\r\n                    text-overflow: ellipsis;\r\n                  \"><span v-if=\"!item.type\"\r\n                        style=\"color: red\">MV&nbsp;</span>{{ item.name }}</span><br />\r\n                <span style=\"color: rgb(199, 199, 199)\"><span>by&nbsp;</span>\r\n                  <span>{{ item.artistName }}</span></span>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer :autoplay=\"true\"\r\n               :fixed=\"true\"\r\n               :audio=\"listen\"\r\n               :liric-type=\"1\"></aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  getSingerDesc,\r\n  getSingerSongList,\r\n  getSingerMvList,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n  getSingerAlbum,\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\nexport default {\r\n  // props: ['singerId'],\r\n  data () {\r\n    return {\r\n      //试听音乐\r\n      listen: [],\r\n      //歌手信息\r\n      singerId: '',\r\n      singerDesc: {},\r\n      songList: [],\r\n      albumList: [],\r\n      mvList: [],\r\n      tagSwitch: {\r\n        detailSwitch: true,\r\n        songSwitch: false,\r\n        albumSwitch: false,\r\n        mvSwitch: false,\r\n      },\r\n    };\r\n  },\r\n  mounted () {\r\n    ////缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌手id\r\n    if (this.$route.params.singerId) { localStorage.setItem('singerId', this.$route.params.singerId) }\r\n    //判断是否使用缓存\r\n    this.$route.params.singerId ? this.singerId = this.$route.params.singerId : this.singerId = localStorage.getItem('singerId')\r\n    this.getSingerDesc();\r\n  },\r\n  methods: {\r\n    //显示歌手单曲、专辑、mv列表开关\r\n    switchChange (tag) {\r\n      var that = this;\r\n      for (let key in that.tagSwitch) {\r\n        if (key != tag) {\r\n          that.tagSwitch[key] = false;\r\n        }\r\n      }\r\n      that.tagSwitch[tag] = true;\r\n    },\r\n\r\n    //获取歌手单曲列表(只有热门50首)\r\n    getSingerSongList (tag) {\r\n      var that = this;\r\n      that.detailShow = false;\r\n      let params = {\r\n        id: that.singerId,\r\n      };\r\n      getSingerSongList(params).then((res) => {\r\n        // console.log(\"歌手单曲列表：\", res.data.hotSongs);\r\n        that.songList = res.data.hotSongs;\r\n        //给每首曲子添加防抖\r\n        for (let item of that.songList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        //转换时间\r\n        let dt = \"dt\";\r\n        that.transMusicTime(that.songList, dt);\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手专辑列表\r\n    getSingerAlbum (tag) {\r\n      var that = this;\r\n      that.detailShow = false;\r\n      let params = {\r\n        id: that.singerId,\r\n        limit: 999,\r\n      };\r\n      getSingerAlbum(params).then((res) => {\r\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\r\n        that.albumList = res.data.hotAlbums;\r\n      });\r\n\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手mv\r\n    getSingerMvList (tag) {\r\n      var that = this;\r\n      let params = {\r\n        id: that.singerId,\r\n      };\r\n      getSingerMvList(params).then((res) => {\r\n        // console.log(\"获取到的歌手MV：\", res.data.mvs);\r\n        that.mvList = res.data.mvs;\r\n        let dt = \"duration\"; //将时长字段赋值，方便传参\r\n        that.transMusicTime(that.mvList, dt);\r\n        for (let i = 0; i < that.mvList.length; i++) {\r\n          if (\r\n            String(that.mvList[i].playCount).length > 5 &&\r\n            String(that.mvList[i].playCount).length < 9\r\n          ) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 5) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.mvList[i].playCount).length > 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手描述\r\n    getSingerDesc () {\r\n      var that = this;\r\n      let params = {\r\n        id: that.singerId,\r\n      };\r\n      getSingerDesc(params).then((res) => {\r\n        // console.log(\"歌手描述\", res.data);\r\n        that.singerDesc = res.data.artist;\r\n      });\r\n    },\r\n    //将时长转化成分秒\r\n    transMusicTime (arr, dt) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        let min = parseInt(arr[i][dt] / 1000 / 60);\r\n        let sec = parseInt((arr[i][dt] / 1000) % 60);\r\n        if (min < 10) {\r\n          min = \"0\" + min;\r\n        }\r\n        if (sec < 10) {\r\n          sec = \"0\" + sec;\r\n        }\r\n        arr[i][dt] = min + \":\" + sec;\r\n      }\r\n    },\r\n    listenMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.songList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.songList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.songList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              // console.log(that.listen);\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //将歌曲添加到播放列表或者播放\r\n    playMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.songList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.songList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.songList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSONG\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                // theme: that.randomColor(),\r\n              });\r\n              // console.log(\r\n              //   that.$store.state.audio,\r\n              //   \"添加歌曲后的歌曲播放列表-----\"\r\n              // );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.songList[index].timer = false;\r\n              setTimeout(() => {\r\n                that.songList[index].timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //跳转到歌曲详情\r\n    goSongDetails (ids) {\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        params: {\r\n          songId: ids,\r\n        },\r\n      });\r\n    },\r\n    //跳转到专辑详情\r\n    goAlbumDetail (albumId) {\r\n      this.$router.push({\r\n        name: \"albumDetail\",\r\n        params: {\r\n          id: albumId,\r\n        },\r\n      });\r\n    },\r\n    //跳转到播放MV页面\r\n    playMV (mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    goMv (mvId) {\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: {\r\n          mvId: mvId,\r\n        },\r\n      });\r\n    },\r\n    //获取歌曲下载地址\r\n    getDownloadUrl (songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    //根据主题更换播放器颜色\r\n    randomColor () {\r\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n    },\r\n  },\r\n};\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./singerDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./singerDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./singerDetail.vue?vue&type=template&id=3484f65e&scoped=true&\"\nimport script from \"./singerDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./singerDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./singerDetail.vue?vue&type=style&index=0&id=3484f65e&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3484f65e\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport axios from 'axios'\r\nexport const download = function (src, filename) {\r\n    if (!src) {\r\n        return\r\n    }\r\n    let fileName = filename || '' // 文件名\r\n    axios({\r\n        method: 'get',\r\n        url: src,\r\n        responseType: 'blob',\r\n        headers: { 'content-type': 'audio/mpeg' },\r\n    }).then((res) => {\r\n        let blobType = 'application/force-download' // 设置blob请求头\r\n        let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n        let downa = document.createElement('a') // 创建A标签\r\n        let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n        downa.href = href // 下载地址\r\n        downa.download = fileName // 下载文件名\r\n        document.body.appendChild(downa)\r\n        downa.click() // 模拟点击A标签\r\n        document.body.removeChild(downa) // 下载完成移除元素\r\n        window.URL.revokeObjectURL(href) // 释放blob对象\r\n    }).catch(function (error) {\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\n// import axios from 'axios'\r\n// export const download = function (src, filename,id) {\r\n//     if (!src) {\r\n//         return\r\n//     }\r\n//     let fileName = filename || '' // 文件名\r\n//     axios({\r\n//         method: 'get',\r\n//         url: `https://autumnfish.cn/song/download/url?id=${id}`,\r\n//         responseType: 'blob',\r\n//         headers: { 'content-type': 'audio/mpeg' },\r\n//     }).then((res) => {\r\n//         let blobType = 'application/force-download' // 设置blob请求头\r\n//         let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n//         let downa = document.createElement('a') // 创建A标签\r\n//         let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n//         downa.href = href // 下载地址\r\n//         downa.download = fileName // 下载文件名\r\n//         document.body.appendChild(downa)\r\n//         downa.click() // 模拟点击A标签\r\n//         document.body.removeChild(downa) // 下载完成移除元素\r\n//         window.URL.revokeObjectURL(href) // 释放blob对象\r\n//     }).catch(function (error) {\r\n//         console.log(error)\r\n//     })\r\n// }"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","singerDesc","img1v1Url","staticStyle","_s","name","alias","_e","_m","on","$event","getSingerSongList","musicSize","getSingerAlbum","albumSize","getSingerMvList","mvSize","tagSwitch","briefDesc","songList","length","_l","item","index","key","goSongDetails","id","ar","dt","stopPropagation","listenMusic","fee","playMusic","Boolean","mv","playMV","getDownloadUrl","goAlbumDetail","blurPicUrl","size","mvList","imgurl16v9","goMv","playCount","duration","type","artistName","directives","rawName","value","expression","listen","staticRenderFns","data","singerId","albumList","detailSwitch","songSwitch","albumSwitch","mvSwitch","mounted","$route","params","localStorage","getItem","getSingerDesc","methods","switchChange","tag","that","detailShow","res","hotSongs","transMusicTime","limit","hotAlbums","mvs","String","i","artist","arr","min","sec","timer","$message","message","playMusicUrl","then","url","setTimeout","songUrlAdd","getSongLyric","getSongDetails","ids","cover","lrc","$router","push","songId","albumId","mvId","songName","download","randomColor","component","src","filename","fileName","axios","method","responseType","headers","blob","Blob","downa","document","createElement","href","window","URL","createObjectURL","body","appendChild","click","removeChild","revokeObjectURL","catch","error"],"sourceRoot":""}