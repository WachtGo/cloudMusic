{"version":3,"file":"js/294.68ef81de.js","mappings":"sJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,UAAUH,EAAG,MAAM,CAACE,YAAY,aAAaF,EAAG,MAAM,CAACA,EAAG,KAAK,CAACA,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAACF,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,MAAM,CAACI,MAAM,CAAC,IAAMR,EAAIS,eAAeC,YAAY,IAAM,QAAQN,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,KAAK,CAACO,YAAY,CAAC,cAAc,MAAM,aAAa,OAAO,YAAY,SAAS,CAACX,EAAIO,GAAG,IAAIP,EAAIY,GAAGZ,EAAIS,eAAeI,MAAM,OAAOT,EAAG,MAAM,CAACO,YAAY,CAAC,OAAS,gBAAgB,OAAS,OAAO,YAAY,SAAS,CAACP,EAAG,MAAM,CAACO,YAAY,CAAC,MAAQ,OAAO,OAAS,OAAO,gBAAgB,QAAQH,MAAM,CAAC,IAAMR,EAAIS,eAAeK,QAAQC,UAAU,IAAM,MAAMX,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACN,EAAIO,GAAG,OAAOP,EAAIY,GAAGZ,EAAIS,eAAeK,QAAQE,UAAU,QAAShB,EAAIS,eAAeK,QAAiB,UAAEV,EAAG,OAAO,CAACJ,EAAIO,GAAG,QAAQP,EAAIY,GAAGZ,EAAIS,eAAeK,QAAQG,cAAcjB,EAAIkB,OAAOd,EAAG,MAAM,CAACO,YAAY,CAAC,OAAS,gBAAgB,OAAS,OAAO,YAAY,SAAS,CAACP,EAAG,OAAO,CAACJ,EAAIO,GAAG,WAAWP,EAAImB,GAAInB,EAAIS,eAAmB,MAAE,SAASW,EAAIC,GAAO,OAAOjB,EAAG,OAAO,CAACkB,IAAID,GAAO,CAACrB,EAAIO,GAAGP,EAAIY,GAAGQ,GAAK,WAAU,GAAGhB,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,OAAO,CAACO,YAAY,CAAC,QAAU,eAAe,cAAc,QAAQ,CAACX,EAAIO,GAAG,IAAIP,EAAIY,GAAGZ,EAAIS,eAAec,aAAa,aAAavB,EAAImB,GAAInB,EAAa,WAAE,SAASwB,EAAKH,GAAO,OAAOjB,EAAG,KAAK,CAACkB,IAAIE,EAAKC,GAAGnB,YAAY,cAAc,CAACF,EAAG,OAAO,CAACO,YAAY,CAAC,QAAU,eAAe,MAAQ,SAAS,CAACX,EAAIO,GAAGP,EAAIY,GAAGS,EAAQ,GAAG,OAAOjB,EAAG,MAAM,CAACsB,GAAG,CAAC,SAAW,SAASC,GAAQ,OAAGA,EAAOC,SAAWD,EAAOE,cAAuB,KAAc7B,EAAI8B,cAAcN,EAAKC,OAAO,CAACrB,EAAG,OAAO,CAACE,YAAY,mBAAmB,CAACN,EAAIO,GAAGP,EAAIY,GAAGY,EAAKX,SAAST,EAAG,OAAO,CAACE,YAAY,mBAAmB,CAACN,EAAIO,GAAGP,EAAIY,GAAGY,EAAKO,GAAG,GAAGlB,SAAST,EAAG,OAAO,CAACE,YAAY,mBAAmB,CAACN,EAAIO,GAAGP,EAAIY,GAAGY,EAAKQ,SAAS5B,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,OAAO,CAACsB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO3B,EAAIiC,YAAYT,EAAKC,GAAID,EAAKU,IAAKb,MAAU,CAACjB,EAAG,IAAI,CAACE,YAAY,gCAA6C,GAAZkB,EAAKU,KAAwB,GAAZV,EAAKU,IAAU9B,EAAG,OAAO,CAACsB,GAAG,CAAC,MAAQ,SAASC,GAAiC,OAAzBA,EAAOQ,kBAAyBnC,EAAIoC,UAAUZ,EAAKC,GAAID,EAAKU,IAAKb,MAAU,CAACjB,EAAG,IAAI,CAACE,YAAY,mCAAmCN,EAAIkB,KAAMmB,QAAQb,EAAKc,IAAKlC,EAAG,OAAO,CAACsB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO3B,EAAIuC,OAAOf,EAAKc,OAAO,CAAClC,EAAG,IAAI,CAACE,YAAY,qCAAqCN,EAAIkB,KAAkB,GAAZM,EAAKU,IAAU9B,EAAG,OAAO,CAACsB,GAAG,CAAC,MAAQ,SAASC,GAAiC,OAAzBA,EAAOQ,kBAAyBnC,EAAIwC,eAAehB,EAAKC,GAAID,EAAKX,SAAS,CAACT,EAAG,IAAI,CAACE,YAAY,iCAAiCN,EAAIkB,KAAkB,GAAZM,EAAKU,IAAU9B,EAAG,QAAQJ,EAAIkB,YAAWd,EAAG,MAAM,CAACO,YAAY,CAAC,QAAU,aAAa,CAACP,EAAG,KAAK,CAACO,YAAY,CAAC,OAAS,iBAAiB,CAACX,EAAIO,GAAG,MAAMP,EAAIY,GAAGZ,EAAIyC,cAAc,QAAQzC,EAAImB,GAAInB,EAAmB,iBAAE,SAASwB,GAAM,OAAOpB,EAAG,MAAM,CAACkB,IAAIE,EAAKC,GAAGnB,YAAY,kBAAkB,CAACF,EAAG,MAAM,CAACO,YAAY,CAAC,MAAQ,OAAO,gBAAgB,QAAQH,MAAM,CAAC,IAAMgB,EAAKkB,KAAK3B,aAAaX,EAAG,OAAO,CAACO,YAAY,CAAC,QAAU,eAAe,cAAc,OAAO,YAAY,SAAS,CAACX,EAAIO,GAAGP,EAAIY,GAAGY,EAAKkB,KAAK1B,UAAU,WAAWZ,EAAG,OAAO,CAACO,YAAY,CAAC,cAAc,OAAO,MAAQ,UAAU,CAACX,EAAIO,GAAG,IAAIP,EAAIY,GAAGY,EAAKmB,SAAS,OAAOvC,EAAG,MAAM,CAACO,YAAY,CAAC,OAAS,SAAS,CAACP,EAAG,OAAO,CAACO,YAAY,CAAC,MAAQ,QAAQ,MAAQ,UAAU,CAACX,EAAIO,GAAG,QAAQP,EAAIY,GAAGY,EAAKoB,YAAYxC,EAAG,OAAO,CAACO,YAAY,CAAC,MAAQ,UAAU,CAACX,EAAIO,GAAGP,EAAIY,GAAGY,EAAKqB,YAAY,kBAAiBzC,EAAG,MAAM,CAACO,YAAY,CAAC,aAAa,WAAW,CAAsB,GAApBX,EAAIyC,aAAmBrC,EAAG,gBAAgB,CAACI,MAAM,CAAC,eAAeR,EAAI8C,YAAY,YAAY,EAAE,OAAS,4BAA4B,MAAQ9C,EAAIyC,aAAa,YAAa,GAAMf,GAAG,CAAC,iBAAiB1B,EAAI+C,4BAA4B,qBAAqB,SAASpB,GAAQ3B,EAAI8C,YAAYnB,GAAQ,sBAAsB,SAASA,GAAQ3B,EAAI8C,YAAYnB,MAAW3B,EAAIkB,MAAM,IAAI,IAAI,KAAKd,EAAG,MAAM,CAAC4C,WAAW,CAAC,CAACnC,KAAK,OAAOoC,QAAQ,SAASC,OAAM,EAAQC,WAAW,WAAW,CAAC/C,EAAG,UAAU,CAACI,MAAM,CAAC,UAAW,EAAK,OAAQ,EAAK,MAAQR,EAAIoD,OAAO,aAAa,MAAM,MACzjIC,EAAkB,G,mBCwRtB,GAEEC,OACE,MAAO,CAELF,OAAQ,GAERG,WAAY,GAEZT,YAAa,EAEbU,UAAW,GAEXC,gBAAiB,GAEjBC,MAAO,GAEPC,MAAO,GACPC,gBAAiB,GACjBnB,aAAc,GAEdoB,WAAY,KAEZC,QAAS,GAETC,OAAQ,GAERtD,eAAgB,KAGpBuD,UAEM/D,KAAKgE,OAAOC,OAAOX,YAA3BY,aAAAA,QAAAA,aAAAA,KAAAA,OAAAA,OAAAA,YAEIlE,KAAKgE,OAAOC,OAAOX,WAAatD,KAAKsD,WAAatD,KAAKgE,OAAOC,OAAOX,WAAatD,KAAKsD,WAAaY,aAAaC,QAAQ,cACzHnE,KAAKoE,cACLpE,KAAKqE,sBAEPC,QAAS,CAEPxB,4BAAJA,GACM,IAAIyB,EAAOvE,KACXuE,EAAK1B,YAAcA,EACnB0B,EAAKF,sBAGPA,qBACE,IAAIE,EAAOvE,KACX,IAAIiE,EAAS,CACXzC,GAAI+C,EAAKjB,WACTkB,MAAO,EACPC,OAAiC,GAAxBF,EAAK1B,YAAc,KAE9BwB,EAAAA,EAAAA,IAAmBJ,GAAQS,MAAK,IAE9B1E,KAAK2D,gBAAkBgB,EAAItB,KAAKuB,SAChCL,EAAK/B,aAAemC,EAAItB,KAAKwB,UAMjChD,cAAJA,GACM7B,KAAK8E,QAAQC,KAAK,CAChBnE,KAAM,cACNqD,OAAQ,CACNe,OAAQC,MAKd3C,OAAJA,GAEMtC,KAAK8E,QAAQC,KAAK,CAChBnE,KAAM,SACNqD,OAAQ,CAAhBiB,KAAAA,MAGIlD,YAAJA,EAAAA,EAAAA,GAEM,IAAIuC,EAAOvE,KACPuE,EAAKhB,UAAUnC,GAAO+D,QACb,GAAPlD,GACFsC,EAAKa,SAAS,CACZC,QAAS,kBACTC,KAAM,aAGVC,EAAAA,EAAAA,IAAa,CACX/D,GAAIA,IACdkD,MAAAC,IAEU,IAAIA,EAAItB,KAAKA,KAAK,GAAGmC,IAWnB,OARAjB,EAAKa,SAAS,CACZC,QAAS,cACTC,KAAM,UAERf,EAAKhB,UAAUnC,GAAO+D,OAAQ,OAC9BM,YAAW,KACTlB,EAAKhB,UAAUnC,GAAO+D,OAAQ,IAC5C,KATYZ,EAAKX,WAAae,EAAItB,KAAKA,KAAK,GAAGmC,QAcvCE,EAAAA,EAAAA,IAAAA,CACE,GAAVlE,IACAkD,MAAAC,IACU,EAAVJ,QAAAA,EAAAA,KAAAA,IAAAA,UAGQoB,EAAAA,EAAAA,IAAAA,CACE,IAAVV,IACAP,MAAAC,IACA,qBACY,EAAZJ,OAAAA,GACY,EAAZA,OAAAA,KAAAA,CACc,KAAd3D,EAAAA,KAAAA,MAAAA,GAAAA,KACc,OAAdgF,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,GAAAA,KACc,IAAdJ,EAAAA,WACc,MAAdK,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,OACc,IAAdC,EAAAA,UAGY,EAAZvB,WAAAA,KACY,EAAZA,QAAAA,SAMIpC,UAAJA,EAAAA,EAAAA,GAEM,IAAIoC,EAAOvE,KAEPuE,EAAKhB,UAAUnC,GAAO+D,QACb,GAAPlD,GACFsC,EAAKa,SAAS,CACZC,QAAS,kBACTC,KAAM,aAGVC,EAAAA,EAAAA,IAAa,CACX/D,GAAIA,IACdkD,MAAAC,IAEU,IAAIA,EAAItB,KAAKA,KAAK,GAAGmC,IAWnB,OARAjB,EAAKa,SAAS,CACZC,QAAS,cACTC,KAAM,UAERf,EAAKhB,UAAUnC,GAAO+D,OAAQ,OAC9BM,YAAW,KACTlB,EAAKhB,UAAUnC,GAAO+D,OAAQ,IAC5C,KATYZ,EAAKX,WAAae,EAAItB,KAAKA,KAAK,GAAGmC,QAcvCE,EAAAA,EAAAA,IAAAA,CACE,GAAVlE,IACAkD,MAAAC,IACU,EAAVJ,QAAAA,EAAAA,KAAAA,IAAAA,UAGQoB,EAAAA,EAAAA,IAAAA,CACE,IAAVV,IACAP,MAAAC,IAEA,qBACY,EAAZJ,OAAAA,OAAAA,UAAAA,CACc,KAAd3D,EAAAA,KAAAA,MAAAA,GAAAA,KACc,OAAdgF,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,GAAAA,KACc,IAAdJ,EAAAA,WACc,MAAdK,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,OACc,IAAdC,EAAAA,UAOY,EAAZvB,WAAAA,KACY,EAAZA,QAAAA,GACY,EAAZA,UAAAA,GAAAA,OAAAA,EACY,YAAZkB,KACc,EAAdlB,UAAAA,GAAAA,OAAAA,IACA,WAOIwB,oBAAqB,SAAUlD,GAE7B7C,KAAK6C,YAAcA,EACnB,IAAI0B,EAAOvE,KACXuE,EAAKH,YAAYvB,IAInBN,eAAJA,EAAAA,GACM,IAAIgC,EAAOvE,KACX,IAAIiE,EAAS,CACXzC,GAAIwD,IAENzC,EAAAA,EAAAA,IAAe0B,GAAQS,MAAK,KAE1BsB,EAAAA,EAAAA,GAASrB,EAAItB,KAAKA,KAAKmC,IAAKS,GAC5B1B,EAAKa,SAAS,CACZE,KAAM,UACND,QAAS,cAIfjB,cAEE,IAAIG,EAAOvE,KACX,IAAIiE,EAAS,CACXzC,GAAI+C,EAAKjB,aAEXc,EAAAA,EAAAA,IAAYH,GAAQS,MAAK,IAGvBH,EAAK/D,eAAiBmE,EAAItB,KAAK6C,SAC/B3B,EAAKhB,UAAYgB,EAAK/D,eAAe2F,OAErC,IAAK,IAAI5E,KAAQgD,EAAKhB,UACpBgB,EAAK6B,KAAK7E,EAAM,SAAS,GAE3BvB,KAAKqG,qBAGTA,iBACE,IAAK,IAAIC,EAAI,EAAGA,EAAItG,KAAKuD,UAAUgD,OAAQD,IAAK,CAC9C,IAAIE,EAAMC,SAASzG,KAAKuD,UAAU+C,GAAGvE,GAAK,IAAO,IAC7C2E,EAAMD,SAAS,KAA3B,wBACYD,EAAM,KACRA,EAAM,IAAMA,GAEVE,EAAM,KACRA,EAAM,IAAMA,GAEd1G,KAAKuD,UAAU+C,GAAGvE,GAAKyE,EAAM,IAAME,MCjhB2P,I,UCQlSC,GAAY,OACd,EACA7G,EACAsD,GACA,EACA,KACA,WACA,MAIF,EAAeuD,EAAiB,S,4ECjBzB,MAAMX,EAAW,SAAUY,EAAKC,GACnC,IAAKD,EACD,OAEJ,IAAIE,EAAWD,GAAY,GAC3BE,GAAAA,CAAM,CACFC,OAAQ,MACRxB,IAAKoB,EACLK,aAAc,OACdC,QAAS,CAAE,eAAgB,gBAC5BxC,MAAMC,IACL,IACIwC,EAAO,IAAIC,KAAK,CAACzC,EAAItB,MAAO,CAAEiC,KAAMX,EAAItB,KAAKiC,OAC7C+B,EAAQC,SAASC,cAAc,KAC/BC,EAAOC,OAAOC,IAAIC,gBAAgBR,GACtCE,EAAMG,KAAOA,EACbH,EAAMrB,SAAWc,EACjBQ,SAASM,KAAKC,YAAYR,GAC1BA,EAAMS,QACNR,SAASM,KAAKG,YAAYV,GAC1BI,OAAOC,IAAIM,gBAAgBR,MAC5BS,OAAM,SAAUC","sources":["webpack://music/./src/views/playListDetails/playListDetails.vue?45ac","webpack://music/src/views/playListDetails/playListDetails.vue","webpack://music/./src/views/playListDetails/playListDetails.vue?3521","webpack://music/./src/views/playListDetails/playListDetails.vue","webpack://music/./src/api/download.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-wrap\"},[_c('h3',[_vm._v(\"歌单详情\")]),_c('div',{staticClass:\"descript\"}),_c('div',[_c('ul',[_c('div',{staticClass:\"playListDetailes\"},[_c('div',{staticClass:\"playListImg\"},[_c('img',{attrs:{\"src\":_vm.playListDetail.coverImgUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"detailsRight\"},[_c('h3',{staticStyle:{\"margin-left\":\"0px\",\"text-align\":\"left\",\"font-size\":\"20px\"}},[_vm._v(\" \"+_vm._s(_vm.playListDetail.name)+\" \")]),_c('div',{staticStyle:{\"margin\":\"10px 0 10px 0\",\"height\":\"30px\",\"font-size\":\"14px\"}},[_c('img',{staticStyle:{\"width\":\"30px\",\"height\":\"30px\",\"border-radius\":\"15px\"},attrs:{\"src\":_vm.playListDetail.creator.avatarUrl,\"alt\":\"\"}}),_c('span',{staticClass:\"playListNickName\"},[_vm._v(\"    \"+_vm._s(_vm.playListDetail.creator.nickname)+\"  \")]),(_vm.playListDetail.creator.signature)?_c('span',[_vm._v(\"  -  \"+_vm._s(_vm.playListDetail.creator.signature))]):_vm._e()]),_c('div',{staticStyle:{\"margin\":\"10px 0 10px 0\",\"height\":\"18px\",\"font-size\":\"14px\"}},[_c('span',[_vm._v(\"标签:  \")]),_vm._l((_vm.playListDetail.tags),function(tag,index){return _c('span',{key:index},[_vm._v(_vm._s(tag)+\" \")])})],2),_c('div',{staticClass:\"playListIntro\"},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"margin-left\":\"0px\"}},[_vm._v(\" \"+_vm._s(_vm.playListDetail.description)+\" \")])])])]),_vm._l((_vm.musicList),function(item,index){return _c('li',{key:item.id,staticClass:\"music-list\"},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"width\":\"20px\"}},[_vm._v(_vm._s(index + 1)+\".\")]),_c('div',{on:{\"dblclick\":function($event){if($event.target !== $event.currentTarget){ return null; }return _vm.goSongDetails(item.id)}}},[_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.name))]),_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.ar[0].name))]),_c('span',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.dt))])]),_c('div',{staticClass:\"option\"},[_c('span',{on:{\"click\":function($event){return _vm.listenMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-headset iconhover\"})]),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-folder-add iconhover\"})]):_vm._e(),(Boolean(item.mv))?_c('span',{on:{\"click\":function($event){return _vm.playMV(item.mv)}}},[_c('i',{staticClass:\"el-icon-video-camera iconhover\"})]):_vm._e(),(item.fee == 0)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.getDownloadUrl(item.id, item.name)}}},[_c('i',{staticClass:\"el-icon-download iconhover\"})]):_vm._e(),(item.fee != 0)?_c('span'):_vm._e()])])}),_c('div',{staticStyle:{\"padding\":\"0px 50px\"}},[_c('h3',{staticStyle:{\"margin\":\"5px 0 10px 0\"}},[_vm._v(\"评论(\"+_vm._s(_vm.commentCount)+\"条)\")]),_vm._l((_vm.playListComment),function(item){return _c('div',{key:item.id,staticClass:\"hoverBackColor\"},[_c('img',{staticStyle:{\"width\":\"50px\",\"border-radius\":\"25px\"},attrs:{\"src\":item.user.avatarUrl}}),_c('span',{staticStyle:{\"display\":\"inline-block\",\"margin-left\":\"10px\",\"font-size\":\"15px\"}},[_vm._v(_vm._s(item.user.nickname)+\"  :  \")]),_c('span',{staticStyle:{\"margin-left\":\"20px\",\"width\":\"750px\"}},[_vm._v(\" \"+_vm._s(item.content)+\" \")]),_c('div',{staticStyle:{\"height\":\"30px\"}},[_c('span',{staticStyle:{\"float\":\"right\",\"width\":\"130px\"}},[_vm._v(\"  时间：\"+_vm._s(item.timeStr))]),_c('span',{staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(item.likedCount)+\" 赞   \")])])])}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[(_vm.commentCount != 0)?_c('el-pagination',{attrs:{\"current-page\":_vm.currentPage,\"page-size\":7,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.commentCount,\"background\":true},on:{\"current-change\":_vm.playListHandleCurrentChange,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}}):_vm._e()],1)],2)],2)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}]},[_c('aplayer',{attrs:{\"autoplay\":true,\"fixed\":true,\"audio\":_vm.listen,\"liric-type\":1}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n\r\n  ul {\r\n    height: 680px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.322);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .playListIntro {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .playListNickName {\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      position: relative;\r\n      display: flex;\r\n      margin: 5px auto;\r\n      padding: 0 10px;\r\n      width: 96%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      border-radius: 5px;\r\n      background: rgba(59, 165, 168, 0.048);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        position: absolute;\r\n        padding-left: 150px;\r\n        width: 240px;\r\n        right: 10px;\r\n        box-sizing: border-box;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: aquamarine;\r\n        transform: scale(1.01);\r\n        // background: rgba(146, 240, 243, 0.247);\r\n      }\r\n    }\r\n  }\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n//   btn-quickprev el-icon-more\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>歌单详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <div class=\"playListDetailes\">\r\n          <div class=\"playListImg\">\r\n            <img :src=\"playListDetail.coverImgUrl\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ playListDetail.name }}\r\n            </h3>\r\n            <div style=\"margin: 10px 0 10px 0; height: 30px; font-size: 14px\">\r\n              <img :src=\"playListDetail.creator.avatarUrl\"\r\n                   alt=\"\"\r\n                   style=\"width: 30px; height: 30px; border-radius: 15px\" />\r\n              <span class=\"playListNickName\">&nbsp;&nbsp;&nbsp;&nbsp;{{\r\n                  playListDetail.creator.nickname\r\n                }}&nbsp;&nbsp;</span><span v-if=\"playListDetail.creator.signature\">&nbsp;&nbsp;-&nbsp;&nbsp;{{\r\n                  playListDetail.creator.signature\r\n                }}</span>\r\n            </div>\r\n            <div style=\"margin: 10px 0 10px 0; height: 18px; font-size: 14px\">\r\n              <span>标签:&nbsp;&nbsp;</span><span v-for=\"(tag, index) in playListDetail.tags\"\r\n                    :key=\"index\">{{ tag }}&nbsp;</span>\r\n            </div>\r\n            <div class=\"playListIntro\"\r\n                 style=\"\">\r\n              <span style=\"display: inline-block; margin-left: 0px\">\r\n                {{ playListDetail.description }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <li class=\"music-list\"\r\n            v-for=\"(item, index) in musicList\"\r\n            :key=\"item.id\">\r\n          <span style=\"display: inline-block; width: 20px\">{{ index + 1 }}.</span>\r\n          <div @dblclick.self=\"goSongDetails(item.id)\">\r\n            <span class=\"music-list-span\">{{ item.name }}</span>\r\n            <span class=\"music-list-span\">{{ item.ar[0].name }}</span>\r\n            <span class=\"music-list-span\">{{ item.dt }}</span>\r\n          </div>\r\n          <div class=\"option\">\r\n            <span @click=\"listenMusic(item.id, item.fee, index)\"><i class=\"el-icon-headset iconhover\"></i></span>\r\n            <!-- 添加到播放列表 -->\r\n            <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                  @click.stop=\"playMusic(item.id, item.fee, index)\"><i class=\"el-icon-folder-add iconhover\"></i>\r\n            </span>\r\n            <span v-if=\"Boolean(item.mv)\"\r\n                  @click=\"playMV(item.mv)\"><i class=\"el-icon-video-camera iconhover\"></i>\r\n            </span>\r\n            <!-- <span v-if=\"!Boolean(item.mv)\">&nbsp;&nbsp;&nbsp; </span> -->\r\n            <span v-if=\"item.fee == 0\"\r\n                  @click.stop=\"getDownloadUrl(item.id, item.name)\"><i class=\"el-icon-download iconhover\"></i></span><span v-if=\"item.fee != 0\"> </span>\r\n          </div>\r\n        </li>\r\n        <div style=\"padding: 0px 50px\">\r\n          <h3 style=\"margin: 5px 0 10px 0\">评论({{ commentCount }}条)</h3>\r\n          <div class=\"hoverBackColor\"\r\n               v-for=\"item in playListComment\"\r\n               :key=\"item.id\">\r\n            <img :src=\"item.user.avatarUrl\"\r\n                 style=\"width: 50px; border-radius: 25px\" />\r\n            <span style=\"display: inline-block; margin-left: 10px; font-size: 15px\">{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span>\r\n            <span style=\"margin-left: 20px; width: 750px\">\r\n              {{ item.content }}\r\n            </span>\r\n            <div style=\"height: 30px\">\r\n              <span style=\"float: right; width: 130px\">&nbsp;&nbsp;时间：{{ item.timeStr }}</span><span style=\"float: right\">{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"text-align: center\">\r\n            <el-pagination v-if=\"commentCount != 0\"\r\n                           @current-change=\"playListHandleCurrentChange\"\r\n                           :current-page.sync=\"currentPage\"\r\n                           :page-size=\"7\"\r\n                           layout=\"prev, pager, next, jumper\"\r\n                           :total=\"commentCount\"\r\n                           :background=\"true\">\r\n            </el-pagination>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer :autoplay=\"true\"\r\n               :fixed=\"true\"\r\n               :audio=\"listen\"\r\n               :liric-type=\"1\"></aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n  getSongList,\r\n  getPlayListComment,\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\nexport default {\r\n  // props: ['songListId'],\r\n  data () {\r\n    return {\r\n      //试听音乐\r\n      listen: [],\r\n      //歌单id\r\n      songListId: '',\r\n      //评论分页\r\n      currentPage: 1,\r\n      // 歌曲数组\r\n      musicList: [],\r\n      //下载音乐的地址\r\n      DownloadSongUrl: \"\",\r\n      //mv地址\r\n      mvUrl: \"\",\r\n      //搜索歌曲总数\r\n      count: \"\",\r\n      playListComment: [],\r\n      commentCount: \"\",\r\n      //音乐地址\r\n      songUrlAdd: null,\r\n      //歌词\r\n      songlrc: \"\",\r\n      //MV\r\n      songMV: [],\r\n      //歌单详情\r\n      playListDetail: {},\r\n    };\r\n  },\r\n  mounted () {\r\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\r\n    if (this.$route.params.songListId) { localStorage.setItem('songListId', this.$route.params.songListId) }\r\n    // 判断是否使用缓存\r\n    this.$route.params.songListId ? this.songListId = this.$route.params.songListId : this.songListId = localStorage.getItem('songListId')\r\n    this.getSongList();\r\n    this.getPlayListComment();\r\n  },\r\n  methods: {\r\n    //切换歌单评论\r\n    playListHandleCurrentChange (currentPage) {\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getPlayListComment();\r\n    },\r\n    //获取歌单评论\r\n    getPlayListComment () {\r\n      var that = this;\r\n      let params = {\r\n        id: that.songListId,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      };\r\n      getPlayListComment(params).then((res) => {\r\n        // console.log(\"歌单评论：\", res.data);\r\n        this.playListComment = res.data.comments;\r\n        that.commentCount = res.data.total;\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      });\r\n    },\r\n\r\n    //获取歌曲详情,进入详情页面\r\n    goSongDetails (ids) {\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        params: {\r\n          songId: ids,\r\n        },\r\n      });\r\n    },\r\n    // 播放MV\r\n    playMV (mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    listenMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              // console.log(that.listen);\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //播放音乐\r\n    playMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      // console.log(that.musicList[index]);\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSONG\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                // theme: that.randomColor(),\r\n              });\r\n              // console.log(\r\n              //   that.$store.state.audio,\r\n              //   \"添加歌曲后的歌曲播放列表-----\"\r\n              // );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.musicList[index].timer = false;\r\n              setTimeout(() => {\r\n                that.musicList[index].timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage;\r\n      var that = this;\r\n      that.getSongList(currentPage);\r\n    },\r\n\r\n    //获取歌曲下载地址\r\n    getDownloadUrl (songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    getSongList () {\r\n      //传入歌单id获取歌曲id和歌单详情\r\n      var that = this;\r\n      let params = {\r\n        id: that.songListId,\r\n      };\r\n      getSongList(params).then((res) => {\r\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\r\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\r\n        that.playListDetail = res.data.playlist;\r\n        that.musicList = that.playListDetail.tracks;\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        this.transMusicTime();\r\n      });\r\n    },\r\n    transMusicTime () {\r\n      for (let i = 0; i < this.musicList.length; i++) {\r\n        let min = parseInt(this.musicList[i].dt / 1000 / 60);\r\n        let sec = parseInt((this.musicList[i].dt / 1000) % 60);\r\n        if (min < 10) {\r\n          min = \"0\" + min;\r\n        }\r\n        if (sec < 10) {\r\n          sec = \"0\" + sec;\r\n        }\r\n        this.musicList[i].dt = min + \":\" + sec;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./playListDetails.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./playListDetails.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./playListDetails.vue?vue&type=template&id=3d5f54fa&scoped=true&\"\nimport script from \"./playListDetails.vue?vue&type=script&lang=js&\"\nexport * from \"./playListDetails.vue?vue&type=script&lang=js&\"\nimport style0 from \"./playListDetails.vue?vue&type=style&index=0&id=3d5f54fa&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3d5f54fa\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport axios from 'axios'\r\nexport const download = function (src, filename) {\r\n    if (!src) {\r\n        return\r\n    }\r\n    let fileName = filename || '' // 文件名\r\n    axios({\r\n        method: 'get',\r\n        url: src,\r\n        responseType: 'blob',\r\n        headers: { 'content-type': 'audio/mpeg' },\r\n    }).then((res) => {\r\n        let blobType = 'application/force-download' // 设置blob请求头\r\n        let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n        let downa = document.createElement('a') // 创建A标签\r\n        let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n        downa.href = href // 下载地址\r\n        downa.download = fileName // 下载文件名\r\n        document.body.appendChild(downa)\r\n        downa.click() // 模拟点击A标签\r\n        document.body.removeChild(downa) // 下载完成移除元素\r\n        window.URL.revokeObjectURL(href) // 释放blob对象\r\n    }).catch(function (error) {\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\n// import axios from 'axios'\r\n// export const download = function (src, filename,id) {\r\n//     if (!src) {\r\n//         return\r\n//     }\r\n//     let fileName = filename || '' // 文件名\r\n//     axios({\r\n//         method: 'get',\r\n//         url: `https://autumnfish.cn/song/download/url?id=${id}`,\r\n//         responseType: 'blob',\r\n//         headers: { 'content-type': 'audio/mpeg' },\r\n//     }).then((res) => {\r\n//         let blobType = 'application/force-download' // 设置blob请求头\r\n//         let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n//         let downa = document.createElement('a') // 创建A标签\r\n//         let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n//         downa.href = href // 下载地址\r\n//         downa.download = fileName // 下载文件名\r\n//         document.body.appendChild(downa)\r\n//         downa.click() // 模拟点击A标签\r\n//         document.body.removeChild(downa) // 下载完成移除元素\r\n//         window.URL.revokeObjectURL(href) // 释放blob对象\r\n//     }).catch(function (error) {\r\n//         console.log(error)\r\n//     })\r\n// }"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","playListDetail","coverImgUrl","staticStyle","_s","name","creator","avatarUrl","nickname","signature","_e","_l","tag","index","key","description","item","id","on","$event","target","currentTarget","goSongDetails","ar","dt","listenMusic","fee","stopPropagation","playMusic","Boolean","mv","playMV","getDownloadUrl","commentCount","user","content","timeStr","likedCount","currentPage","playListHandleCurrentChange","directives","rawName","value","expression","listen","staticRenderFns","data","songListId","musicList","DownloadSongUrl","mvUrl","count","playListComment","songUrlAdd","songlrc","songMV","mounted","$route","params","localStorage","getItem","getSongList","getPlayListComment","methods","that","limit","offset","then","res","comments","total","$router","push","songId","ids","mvId","timer","$message","message","type","playMusicUrl","url","setTimeout","getSongLyric","getSongDetails","artist","cover","lrc","handleCurrentChange","download","songName","playlist","tracks","$set","transMusicTime","i","length","min","parseInt","sec","component","src","filename","fileName","axios","method","responseType","headers","blob","Blob","downa","document","createElement","href","window","URL","createObjectURL","body","appendChild","click","removeChild","revokeObjectURL","catch","error"],"sourceRoot":""}