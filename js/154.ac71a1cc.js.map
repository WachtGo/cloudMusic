{"version":3,"file":"js/154.ac71a1cc.js","mappings":"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","sources":["webpack://music/./src/views/albumDetail/albumDetail.vue?0eac","webpack://music/src/views/albumDetail/albumDetail.vue","webpack://music/./src/views/albumDetail/albumDetail.vue?a858","webpack://music/./src/views/albumDetail/albumDetail.vue","webpack://music/./src/api/download.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-wrap\"},[_c('h3',[_vm._v(\"专辑详情\")]),_c('div',{staticClass:\"descript\"}),_c('div',[_c('div',{staticClass:\"ul\"},[_c('div',{staticClass:\"playListDetailes\"},[_c('div',{staticClass:\"playListImg\"},[_c('img',{attrs:{\"src\":_vm.albumDesc.blurPicUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"detailsRight\"},[_c('h3',{staticStyle:{\"margin-left\":\"0px\",\"text-align\":\"left\",\"font-size\":\"20px\"}},[_vm._v(\" \"+_vm._s(_vm.albumDesc.name)+\" \")]),_c('div',{staticStyle:{\"font-size\":\"14px\"}},[_c('div',{staticClass:\"aliasClass\"},[_c('img',{staticClass:\"artistPic\",attrs:{\"src\":_vm.albumDesc.artist.img1v1Url,\"alt\":\"\"}}),_vm._v(\"- \"),_c('span',{staticClass:\"playListNickName\"},[_vm._v(_vm._s(_vm.albumDesc.artist.name))])])])])]),_c('div',{attrs:{\"id\":\"singleSongs\"}},[_c('h3',[_vm._v(\"专辑歌曲：\"+_vm._s(_vm.albumSongs.length)+\"首\")]),_vm._l((_vm.albumSongs),function(item,index){return _c('div',{key:index,staticClass:\"SingsList\"},[_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"20px\"}},[_vm._v(_vm._s(index + 1)+\".\")]),_c('div',{on:{\"dblclick\":function($event){return _vm.goSongDetails(item.id)}}},[_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"350px\"}},[_vm._v(\" \"+_vm._s(item.name)+\" \")]),_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"250px\",\"text-align\":\"center\"}},[_vm._v(\" \"+_vm._s(item.ar[0].name)+\" \")]),_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"230px\"}},[_vm._v(\" \"+_vm._s(item.dt)+\" \")]),_c('span',{staticClass:\"song-list\",staticStyle:{\"width\":\"150px\"}})]),_c('span',{staticClass:\"song-list song-list-option\"},[_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.listenMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-headset iconhover\"})]),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMusic(item.id, item.fee, index)}}},[_c('i',{staticClass:\"el-icon-folder-add iconhover\"})]):_vm._e(),(Boolean(item.mv))?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMV(item.mv)}}},[_c('i',{staticClass:\"el-icon-video-camera iconhover\"})]):_vm._e(),(item.fee == 0)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.getDownloadUrl(item.id, item.name)}}},[_c('i',{staticClass:\"el-icon-download iconhover\"})]):_vm._e()])])})],2)])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}]},[_c('aplayer',{attrs:{\"autoplay\":true,\"fixed\":true,\"audio\":_vm.listen,\"liric-type\":1}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n\r\n  .ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.322);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto 10px;\r\n      padding: 10px;\r\n      width: 96%;\r\n      height: 170px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(221, 239, 243, 0.11);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 150px;\r\n          height: 150px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 150px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          position: absolute;\r\n          bottom: 0;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              margin-right: 40px;\r\n              transition: 0.2s;\r\n              .musicSize {\r\n                color: rgb(193, 243, 226);\r\n                transition: 0.2s;\r\n                &:hover {\r\n                  color: rgb(109, 247, 201);\r\n                }\r\n              }\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                // color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .songTns {\r\n          width: 100%;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .aliasClass {\r\n          position: absolute;\r\n          top: 69px;\r\n        }\r\n        .artistPic {\r\n          margin-right: 10px;\r\n          width: 30px;\r\n          height: 30px;\r\n          border-radius: 15px;\r\n        }\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-right: 20px;\r\n        }\r\n\r\n        .musicSize {\r\n          color: rgb(170, 240, 240);\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(95, 158, 160, 0.322);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n  #singerMvs {\r\n    margin: 0 auto;\r\n    padding: 0px 10px 20px;\r\n    width: 96%;\r\n    height: 420px;\r\n    border-radius: 10px;\r\n    background: rgba(219, 255, 242, 0.151);\r\n    box-sizing: border-box;\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 220px;\r\n        height: 180px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 220px;\r\n          height: 132px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>专辑详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"ul\">\r\n        <div class=\"playListDetailes\">\r\n          <div class=\"playListImg\">\r\n            <img :src=\"albumDesc.blurPicUrl\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ albumDesc.name }}\r\n            </h3>\r\n            <div style=\"font-size: 14px\">\r\n              <div class=\"aliasClass\">\r\n                <img class=\"artistPic\"\r\n                     :src=\"albumDesc.artist.img1v1Url\"\r\n                     alt=\"\" />-\r\n                <span class=\"playListNickName\">{{\r\n                  albumDesc.artist.name\r\n                }}</span>\r\n              </div>\r\n\r\n              <!-- <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerSongList('songSwitch')\"\r\n                    >收藏：<span class=\"musicSize\">{{\r\n                      albumDesc.musicSize\r\n                    }}</span></span\r\n                  >\r\n                  <span class=\"inline-block\"\r\n                    >专辑：<span class=\"musicSize\">{{\r\n                      albumDesc.albumSize\r\n                    }}</span>\r\n                  </span>\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerMvList('mvSwitch')\"\r\n                    >MV：<span class=\"musicSize\">{{ albumDesc.mvSize }}</span>\r\n                  </span>\r\n                </div>\r\n              </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"singerDetail\" v-if=\"tagSwitch.detailSwitch\">\r\n          <h3 style=\"font-size: 15px\">简介：</h3>\r\n          <p>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ albumDesc.briefDesc }}\r\n          </p>\r\n        </div> -->\r\n        <div id=\"singleSongs\">\r\n          <h3>专辑歌曲：{{ albumSongs.length }}首</h3>\r\n          <div class=\"SingsList\"\r\n               v-for=\"(item, index) in albumSongs\"\r\n               :key=\"index\">\r\n            <span class=\"song-list\"\r\n                  style=\"width: 20px\">{{ index + 1 }}.</span>\r\n            <div @dblclick=\"goSongDetails(item.id)\">\r\n              <span class=\"song-list\"\r\n                    style=\"width: 350px\">\r\n                {{ item.name }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 250px; text-align: center\">\r\n                {{ item.ar[0].name }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 230px\">\r\n                {{ item.dt }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 150px\">\r\n              </span>\r\n            </div>\r\n            <span class=\"song-list song-list-option\">\r\n              <span @click.stop=\"listenMusic(item.id, item.fee, index)\"><i class=\"el-icon-headset iconhover\"></i></span>\r\n              <!-- 添加到播放列表 -->\r\n              <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                    @click.stop=\"playMusic(item.id, item.fee, index)\"><i class=\"el-icon-folder-add iconhover\"></i>\r\n              </span>\r\n              <span v-if=\"Boolean(item.mv)\"\r\n                    @click.stop=\"playMV(item.mv)\"><i class=\"el-icon-video-camera iconhover\"></i>\r\n              </span>\r\n              <span v-if=\"item.fee == 0\"\r\n                    @click.stop=\"getDownloadUrl(item.id, item.name)\"><i class=\"el-icon-download iconhover\"></i>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer :autoplay=\"true\"\r\n               :fixed=\"true\"\r\n               :audio=\"listen\"\r\n               :liric-type=\"1\">\r\n      </aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAlbumContent,\r\n  getDownloadUrl,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\n\r\nexport default {\r\n  // props: ['albumId'],\r\n  data () {\r\n    return {\r\n      listen: [],\r\n      albumId: '',\r\n      albumSongs: [],\r\n      albumDesc: {},\r\n    };\r\n  },\r\n  mounted () {\r\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\r\n    if (this.$route.params.albumId) { localStorage.setItem('albumId', this.$route.params.albumId) }\r\n    // 判断是否使用缓存\r\n    this.$route.params.albumId ? this.albumId = this.$route.params.albumId : this.albumId = localStorage.getItem('albumId')\r\n    this.getAlbumContent();\r\n  },\r\n  methods: {\r\n\r\n    getAlbumContent () {\r\n      var that = this;\r\n      let params = {\r\n        id: that.albumId,\r\n      };\r\n      getAlbumContent(params).then((res) => {\r\n        // console.log(\"专辑信息---：\", res.data.album);\r\n        // console.log(\"专辑歌曲---：\", res.data.songs);\r\n        that.albumDesc = res.data.album;\r\n        that.albumSongs = res.data.songs;\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.albumSongs) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        let dt = \"dt\";\r\n        that.transMusicTime(that.albumSongs, dt);\r\n      });\r\n    },\r\n\r\n    //将时长转化成分秒\r\n    transMusicTime (arr, dt) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        let min = parseInt(arr[i][dt] / 1000 / 60);\r\n        let sec = parseInt((arr[i][dt] / 1000) % 60);\r\n        if (min < 10) {\r\n          min = \"0\" + min;\r\n        }\r\n        if (sec < 10) {\r\n          sec = \"0\" + sec;\r\n        }\r\n        arr[i][dt] = min + \":\" + sec;\r\n      }\r\n    },\r\n    //获取歌曲下载地址\r\n    getDownloadUrl (songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    listenMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.albumSongs[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.albumSongs[index].timer = false;\r\n            setTimeout(() => {\r\n              that.albumSongs[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              // console.log(that.listen);\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //将歌曲添加到播放列表或者播放\r\n    playMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.albumSongs[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.albumSongs[index].timer = false;\r\n            setTimeout(() => {\r\n              that.albumSongs[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSONG\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                // theme: that.randomColor(),\r\n              });\r\n              // console.log(\r\n              //   that.$store.state.audio,\r\n              //   \"添加歌曲后的歌曲播放列表-----\"\r\n              // );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.albumSongs[index].timer = false;\r\n              setTimeout(() => {\r\n                that.albumSongs[index].timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //跳转到歌曲详情\r\n    goSongDetails (ids) {\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        params: {\r\n          songId: ids,\r\n        },\r\n      });\r\n    },\r\n    //跳转到播放MV页面\r\n    playMV (mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    goMv (mvId) {\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: {\r\n          mvId: mvId,\r\n        },\r\n      });\r\n    },\r\n    //根据主题更换播放器颜色\r\n    randomColor () {\r\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n    },\r\n  },\r\n};\r\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./albumDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./albumDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./albumDetail.vue?vue&type=template&id=8c5b7f68&scoped=true&\"\nimport script from \"./albumDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./albumDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./albumDetail.vue?vue&type=style&index=0&id=8c5b7f68&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8c5b7f68\",\n  null\n  \n)\n\nexport default component.exports","\r\nimport axios from 'axios'\r\nexport const download = function (src, filename) {\r\n    if (!src) {\r\n        return\r\n    }\r\n    let fileName = filename || '' // 文件名\r\n    axios({\r\n        method: 'get',\r\n        url: src,\r\n        responseType: 'blob',\r\n        headers: { 'content-type': 'audio/mpeg' },\r\n    }).then((res) => {\r\n        let blobType = 'application/force-download' // 设置blob请求头\r\n        let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n        let downa = document.createElement('a') // 创建A标签\r\n        let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n        downa.href = href // 下载地址\r\n        downa.download = fileName // 下载文件名\r\n        document.body.appendChild(downa)\r\n        downa.click() // 模拟点击A标签\r\n        document.body.removeChild(downa) // 下载完成移除元素\r\n        window.URL.revokeObjectURL(href) // 释放blob对象\r\n    }).catch(function (error) {\r\n        // console.log(error)\r\n    })\r\n}\r\n\r\n\r\n// import axios from 'axios'\r\n// export const download = function (src, filename,id) {\r\n//     if (!src) {\r\n//         return\r\n//     }\r\n//     let fileName = filename || '' // 文件名\r\n//     axios({\r\n//         method: 'get',\r\n//         url: `https://autumnfish.cn/song/download/url?id=${id}`,\r\n//         responseType: 'blob',\r\n//         headers: { 'content-type': 'audio/mpeg' },\r\n//     }).then((res) => {\r\n//         let blobType = 'application/force-download' // 设置blob请求头\r\n//         let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n//         let downa = document.createElement('a') // 创建A标签\r\n//         let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n//         downa.href = href // 下载地址\r\n//         downa.download = fileName // 下载文件名\r\n//         document.body.appendChild(downa)\r\n//         downa.click() // 模拟点击A标签\r\n//         document.body.removeChild(downa) // 下载完成移除元素\r\n//         window.URL.revokeObjectURL(href) // 释放blob对象\r\n//     }).catch(function (error) {\r\n//         console.log(error)\r\n//     })\r\n// }"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","albumDesc","blurPicUrl","staticStyle","_s","name","artist","img1v1Url","albumSongs","length","_l","item","index","key","on","$event","goSongDetails","id","ar","dt","stopPropagation","listenMusic","fee","playMusic","_e","Boolean","mv","playMV","getDownloadUrl","directives","rawName","value","expression","listen","staticRenderFns","data","albumId","mounted","$route","params","localStorage","getItem","getAlbumContent","methods","that","then","res","album","songs","$set","transMusicTime","i","arr","min","parseInt","sec","songId","download","url","songName","$message","type","message","timer","playMusicUrl","setTimeout","songUrlAdd","getSongLyric","getSongDetails","ids","cover","lrc","$router","push","mvId","goMv","randomColor","component","src","filename","fileName","axios","method","responseType","headers","blob","Blob","downa","document","createElement","href","window","URL","createObjectURL","body","appendChild","click","removeChild","revokeObjectURL","catch","error"],"sourceRoot":""}